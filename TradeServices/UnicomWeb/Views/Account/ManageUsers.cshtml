@model IEnumerable<UnicomWeb.Models.ApplicationUser>

@{
    ViewBag.Title = "Управление пользователями";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap3-dialog/1.34.7/js/bootstrap-dialog.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap3-dialog/1.34.7/css/bootstrap-dialog.min.css"> 
@section scripts {
    <script type="text/javascript">
        function deleteUser(id, name)
        {
           // alert(name);
            // location.reload();

            BootstrapDialog.confirm({
                title: 'Удаление пользователя',
                message: 'Внимание! Пользователь '+name+' будет удален',
                type: BootstrapDialog.TYPE_QUESTION, // <-- Default value is BootstrapDialog.TYPE_PRIMARY
                closable: true, // <-- Default value is false
                draggable: true, // <-- Default value is false
                btnCancelLabel: 'Нет', // <-- Default value is 'Cancel',
                btnOKLabel: 'Удалить', // <-- Default value is 'OK',
                btnOKClass: 'btn-danger', // <-- If you didn't specify it, dialog type will be used,
                callback: function (result) {
                    // result will be true if button was click, while it will be false if users close the dialog directly.
                    if (result) {
                        deleteServer(id);
                    } else {

                    }
                }
            });
        }

        function deleteServer(userid) {
            var requrl = '@Url.Action("DeleteUser", "Account", null, Request.Url.Scheme, null)';
            $.ajax({
                type: "POST",
                url: requrl,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({ id: userid}),
                error: function (xhr, status, error) {
                    //  var err = eval("(" + xhr.responseText + ")");
                    console.log(error);
                },
                success: function (data) {
                    location.reload();
                }
            });

        }

        function approveUser(id, name, val) {
            BootstrapDialog.confirm({
                title: (val === true ? ' Подтверждение логина пользователя' : "Отмена подтверждения логина"),
                message: 'Внимание! Логин пользователя  ' + name + ' будет '+ (val === true ? 'подтвержден' : 'отменен'),
                type: BootstrapDialog.TYPE_QUESTION, // <-- Default value is BootstrapDialog.TYPE_PRIMARY
                closable: true, // <-- Default value is false
                draggable: true, // <-- Default value is false
                btnCancelLabel: 'Нет', // <-- Default value is 'Cancel',
                btnOKLabel:  (val === true ? 'Подтвердить' : 'Отменить')+' логин', // <-- Default value is 'OK',
                btnOKClass: 'btn-danger', // <-- If you didn't specify it, dialog type will be used,
                callback: function (result) {
                    // result will be true if button was click, while it will be false if users close the dialog directly.
                    if (result) {
                        approveServer(id, val);
                    } else {

                    }
                }
            });
        }

        function approveServer(userid, val) {
            var requrl = '@Url.Action("ApproveLogin", "Account", null, Request.Url.Scheme, null)';
            $.ajax({
                type: "POST",
                url: requrl,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({ id: userid, value: val }),
                error: function (xhr, status, error) {
                    //  var err = eval("(" + xhr.responseText + ")");
                    console.log(error);
                },
                success: function (data) {
                    location.reload();
                }
            });

        }
    </script>
}

<h2>Управление пользователями</h2>

<p>
    @Html.ActionLink("Новый пользователь", "Register")
</p>
<table class="table">
    <tr>
        <th>
            @*@Html.DisplayNameFor(model => model.UserName)*@
            Пользователь
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            Логин подтвержден
            @*@Html.DisplayNameFor(model => model.LoginApproved)*@
        </th>
        <th></th>
    </tr>

@foreach (var item in Model)
{
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.UserName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Email)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LoginApproved)
        </td>
        <td>
            @*@Html.ActionLink("Редактировать", "Edit", new { id = item.Id }) |*@
            @*@Html.ActionLink("Details", "Details", new { id = item.Id }) |*@
            @*@Html.ActionLink("Удалить", "Delete", new { id = item.Id })|*@
            @if (item.LoginApproved)
            {
                <button onclick="approveUser('@item.Id', '@item.UserName', false)" class="btn btn-primary btn-sm">Отмена подтверждения  логина</button>
            }
            else
            {
                <button onclick="approveUser('@item.Id', '@item.UserName', true)" class="btn btn-primary btn-sm">Подтвердить логин</button>
            }
            <button  class="btn btn-primary btn-sm" onclick="javascript:window.location=('@Url.Action("EditUserPassword", "Account", new { id = item.Id })')">Изменить пароль</button>
            <button onclick="deleteUser('@item.Id', '@item.UserName')" class="btn btn-danger btn-sm">Удалить</button>
            


</td>

</tr>
}

</table>


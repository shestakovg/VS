<?xml version="1.0" encoding="UTF-8"?>
<doc>
<assembly>
        <name>_1C.V8.Data</name>
    </assembly>
<members>
<member name="T:_1C.V8.Data.ConnectionStringHelper">
<summary>
            Класс для работы с файлом списка информационных баз.
            </summary>
</member>
<member name="M:_1C.V8.Data.ConnectionStringHelper.#ctor">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.ConnectionStringHelper" />.
            </summary>
</member>
<member name="M:_1C.V8.Data.ConnectionStringHelper.#ctor(_1C.V8.Data.ComConnectorVersion)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.ConnectionStringHelper" />.
            </summary>
</member>
<member name="M:_1C.V8.Data.ConnectionStringHelper.getConnectionStringFile">
<summary>
            Получение имени файла со строками соединения.
            </summary>
</member>
<member name="M:_1C.V8.Data.ConnectionStringHelper.loadConnectionStrings(System.String)">
<summary>
            Получение массива со строками соединений из файла.
            </summary>
<param name="filename">Имя файла</param>
</member>
<member name="M:_1C.V8.Data.ConnectionStringHelper.unpackString(System.String)">
<summary>
            Распаковать строку 
            </summary>
<param name="str">Строка</param>
</member>
<member name="M:_1C.V8.Data.ConnectionStringHelper.getInfoFromEntry(System.String,System.String@,System.String@)">
<summary>
            Получение названия и строки соединения из записи 
            </summary>
<param name="entryString">Запись из файла</param>
<param name="name">Название ИБ</param>
<param name="connectionString">Строка соединения</param>
</member>
<member name="M:_1C.V8.Data.ConnectionStringHelper.ReadAndParseData">
<summary>
            Прочитать и разобрать данные из файла 
            </summary>
</member>
<member name="P:_1C.V8.Data.ConnectionStringHelper.Version">
<summary>
            Возвращает или задает версию COM-соединения для работы с 1С:Предприятием.
            </summary>
</member>
<member name="P:_1C.V8.Data.ConnectionStringHelper.NameList">
<summary>
            Возвращает или задает массив имен информационных баз. 
            </summary>
</member>
<member name="P:_1C.V8.Data.ConnectionStringHelper.ConnectionList">
<summary>
            Возвращает или задает массив строк соединений.
            </summary>
</member>
<member name="T:_1C.V8.Data.GenerateDataSetForm">
<summary>
            Summary description for GenerateDataSetForm.
            </summary>
</member>
<member name="F:_1C.V8.Data.GenerateDataSetForm.components">
<summary>
            Required designer variable.
            </summary>
</member>
<member name="M:_1C.V8.Data.GenerateDataSetForm.Dispose(System.Boolean)">
<summary>
            Clean up any resources being used.
            </summary>
</member>
<member name="M:_1C.V8.Data.GenerateDataSetForm.InitializeComponent">
<summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
</member>
<member name="T:_1C.V8.Data.IV8MDProvider">
<summary>
            Интерфейс объекта поставляющего информацию о типах
            </summary>
</member>
<member name="M:_1C.V8.Data.IV8MDProvider.CreateTypes(_1C.V8.Data.ComObject,System.String,System.Int32,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace)">
<summary>
            Генерация типов данных .NET по метаданным
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="IBAlias">Имя метаданныx</param>
<param name="builtInLang">Вариант встроенного языка</param>
<param name="compileUnit">Единица компиляции, в которой создаются типы</param>
<param name="codeNamespace">Namespace для размещения типов</param>
</member>
<member name="M:_1C.V8.Data.IV8MDProvider.GetTypesInfo(_1C.V8.Data.ComObject,_1C.V8.Data.V8Metadata,System.Collections.Hashtable,_1C.V8.Data.ComObject[])">
<summary>
            Получить информацию о типах
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="metadata">Метаданные</param>
<param name="mdToType">Соответстсвие имени объекта метаданных типу ссылки</param>
<param name="connections">Соединения с ИБ для каждого языка</param>
</member>
<member name="M:_1C.V8.Data.IV8MDProvider.GetTablesInfo(_1C.V8.Data.ComObject,_1C.V8.Data.V8Metadata,System.Collections.Hashtable,System.Collections.Hashtable,System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.ListDictionary,System.Collections.Specialized.NameValueCollection,_1C.V8.Data.ComObject[])">
<summary>
            Получить информацию о таблицах
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="metadata">Метаданные</param>
<param name="mdToType">Соответстсвие имени объекта метаданных типу ссылки</param>
<param name="mdToTable">Соответстсвие имени объекта метаданных типу таблицы</param>
<param name="actionsToRecorder">Соответствие движений регистратора имени объекта метаданных</param>
<param name="subTables">Соответствие подчиненных таблиц имени объекта метаданных</param>
<param name="inputOnBasis">Соответствие объектов ввода на основании имени объекта метаданных</param>
<param name="connections">Соединения с ИБ для каждого языка</param>
</member>
<member name="T:_1C.V8.Data.LangUsersForm">
<summary>
            Форма для ввода имен пользователей и паролей для разных языков конфигурации
            </summary>
</member>
<member name="F:_1C.V8.Data.LangUsersForm.components">
<summary>
            Required designer variable.
            </summary>
</member>
<member name="M:_1C.V8.Data.LangUsersForm.#ctor">
<summary>
            Конструктор
            </summary>
</member>
<member name="M:_1C.V8.Data.LangUsersForm.Dispose(System.Boolean)">
<summary>
            Clean up any resources being used.
            </summary>
</member>
<member name="M:_1C.V8.Data.LangUsersForm.InitializeComponent">
<summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
</member>
<member name="M:_1C.V8.Data.LangUsersForm.SetData(System.String[],System.String[],System.String[])">
<summary>
            Конструирование ЭУ для языков конфигурации. Установка начальных значений
            </summary>
<param name="langCodes">Список языков конфигурации</param>
<param name="userNames">Имена пользователей</param>
<param name="userPasswords">Пароли пользователей</param>
</member>
<member name="M:_1C.V8.Data.LangUsersForm.GetData(System.String[]@,System.String[]@,System.String[]@)">
<summary>
            Получить введенные данные
            </summary>
<param name="langCodes">Список языков конфигурации</param>
<param name="userNames">Имена пользователей</param>
<param name="userPasswords">Пароли пользователей</param>
</member>
<member name="T:_1C.V8.Data.ObjectRef">
<summary>
            Базовый класс для представления ссылок на объекты базы данных 1С:Предприятия 8.
            </summary>
</member>
<member name="M:_1C.V8.Data.ObjectRef.#ctor">
<summary>
            Конструктор по умолчанию. 
            Необходим для создания унаследованных типов
            </summary>
</member>
<member name="M:_1C.V8.Data.ObjectRef.#ctor(System.Guid)">
<summary>
            Конструктор по уникальному идентификатору
            </summary>
<param name="uuid">Уникальный идентификатор</param>
</member>
<member name="M:_1C.V8.Data.ObjectRef.Equals(System.Object)">
<summary>
            Сравнивает объекты типа ObjectRef.
            Для того чтобы быть равными объекты должны быть одного типа
            и содержать одинаковый UUID
            </summary>
<param name="obj">Объект, с которым производится сравнение</param>
<returns>true - объекты имеют идентичное состояние, false - в противном случае</returns>
</member>
<member name="M:_1C.V8.Data.ObjectRef.GetHashCode">
<summary>
            Получение хэш-кода
            </summary>
<returns>хэш-код</returns>
</member>
<member name="M:_1C.V8.Data.ObjectRef.ToInvariantString">
<summary>
            Преобразование в строку для передачи в качества параметра в Web-формы
            </summary>
<returns>Строковое представление значения</returns>
</member>
<member name="M:_1C.V8.Data.ObjectRef.Reference(_1C.V8.Data.V8DbConnection)">
<summary>
            Возвращает COM-объект 1С-Предприятия для этого значения
            </summary>
<param name="connection">Соединение с информационной базой</param>
<returns>Возвращает COM-объект 1С-Предприятия</returns>
</member>
<member name="M:_1C.V8.Data.ObjectRef.Reference(_1C.V8.Data.ComObject)">
<summary>
            Возвращает COM-объект 1С-Предприятия для этого значения
            </summary>
<param name="connection">Соединение с информационной базой</param>
<returns>Возвращает COM-объект 1С-Предприятия</returns>
</member>
<member name="M:_1C.V8.Data.ObjectRef.Presentation(_1C.V8.Data.V8DbConnection)">
<summary>
            Возвращает представление этого значения
            </summary>
<param name="connection">Соединение с информационной базой</param>
<returns>Возвращает представление значения</returns>
</member>
<member name="M:_1C.V8.Data.ObjectRef.IsEmpty">
<summary>
            Проверяет, является ли этот <see cref="T:_1C.V8.Data.ObjectRef" /> пустой ссылкой
            </summary>
<returns>true, если <see cref="T:_1C.V8.Data.ObjectRef" /> - пустая ссылка, в противном случае false</returns>
</member>
<member name="M:_1C.V8.Data.ObjectRef.CompareTo(System.Object)">
<summary>
            Сравнение объектов
            </summary>
<param name="obj">Объект, с которым происходит сравнение</param>
<returns>0 - если объекты равны</returns>
</member>
<member name="P:_1C.V8.Data.ObjectRef.UUID">
<summary>
            Уникальный идентификатор, представляющий значение ссылки
            </summary>
</member>
<member name="T:_1C.V8.Data.AccumulationMovementType">
<summary>
            Перечисление соответствующее системному перечислению 'ВидДвиженияНакопления'
            </summary>
</member>
<member name="F:_1C.V8.Data.AccumulationMovementType.Receipt">
<summary>
            Приход
            </summary>
</member>
<member name="F:_1C.V8.Data.AccumulationMovementType.Expense">
<summary>
            Расход
            </summary>
</member>
<member name="T:_1C.V8.Data.AccountType">
<summary>
            Перечисление соответствующее системному перечислению 'ВидСчета'
            </summary>
</member>
<member name="F:_1C.V8.Data.AccountType.Active">
<summary>
            Активный
            </summary>
</member>
<member name="F:_1C.V8.Data.AccountType.Passive">
<summary>
            Пассивный
            </summary>
</member>
<member name="F:_1C.V8.Data.AccountType.ActivePassive">
<summary>
            Активно-пассивный
            </summary>
</member>
<member name="T:_1C.V8.Data.AccountingMovementType">
<summary>
            Перечисление соответствующее системному перечислению 'ВидДвиженияБухгалтерии'
            </summary>
</member>
<member name="F:_1C.V8.Data.AccountingMovementType.Debit">
<summary>
            Дебет
            </summary>
</member>
<member name="F:_1C.V8.Data.AccountingMovementType.Credit">
<summary>
            Кредит
            </summary>
</member>
<member name="T:_1C.V8.Data.AllowedSign">
<summary>
            Перечисление, соответствующее перечислению ДопустимыйЗнак/AllowedSign
            </summary>
</member>
<member name="F:_1C.V8.Data.AllowedSign.Any">
<summary>
            Любой
            </summary>
</member>
<member name="F:_1C.V8.Data.AllowedSign.NonNegative">
<summary>
            Неотрицательный
            </summary>
</member>
<member name="T:_1C.V8.Data.AllowedLength">
<summary>
            Перечисление, соответствующее перечислению ДопустимаяДлина/AllowedLength
            </summary>
</member>
<member name="F:_1C.V8.Data.AllowedLength.Fixed">
<summary>
            Фиксированная
            </summary>
</member>
<member name="F:_1C.V8.Data.AllowedLength.Varying">
<summary>
            Переменная
            </summary>
</member>
<member name="T:_1C.V8.Data.DateFractions">
<summary>
            Перечисление, соответствующее перечислению ЧастиДаты/DateFractions
            </summary>
</member>
<member name="F:_1C.V8.Data.DateFractions.Date">
<summary>
            Дата
            </summary>
</member>
<member name="F:_1C.V8.Data.DateFractions.Time">
<summary>
            Время
            </summary>
</member>
<member name="F:_1C.V8.Data.DateFractions.DateTime">
<summary>
            ДатаВремя
            </summary>
</member>
<member name="T:_1C.V8.Data.NumericQualifiers">
<summary>
            Квалификаторы числа
            </summary>
</member>
<member name="M:_1C.V8.Data.NumericQualifiers.#ctor">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.NumericQualifiers" />
            </summary>
</member>
<member name="M:_1C.V8.Data.NumericQualifiers.#ctor(System.Int32,System.Int32,_1C.V8.Data.AllowedSign)">
<summary>
            Копирующий конструктор
            </summary>
</member>
<member name="M:_1C.V8.Data.NumericQualifiers.Equals(System.Object)">
<summary>
            Сравнение объектов
            </summary>
<param name="obj">Объект, с которым производится сравнение</param>
<returns>true - объекты имеют идентичное состояние, false - в противном случае</returns>
</member>
<member name="M:_1C.V8.Data.NumericQualifiers.GetHashCode">
<summary>
            Хэш-код данного объекта
            </summary>
<returns>хэш-код</returns>
</member>
<member name="M:_1C.V8.Data.NumericQualifiers.Clone">
<summary>
            Создает идентичную копию данного элемента.
            </summary>
<returns>Объект <see cref="T:_1C.V8.Data.NumericQualifiers" />, создаваемый данным методом.</returns>
</member>
<member name="M:_1C.V8.Data.NumericQualifiers.ToString">
<summary>
            Преобразование в строку
            </summary>
<returns>Строковое представление квалификатора числа</returns>
</member>
<member name="M:_1C.V8.Data.NumericQualifiers.Parse(System.String)">
<summary>
            Создание квалификатора числа из его строкового представления
            </summary>
<param name="str">Строковое представление квалификатора числа</param>
<returns>Квалификатор числа</returns>
</member>
<member name="P:_1C.V8.Data.NumericQualifiers.Length">
<summary>
            Общее число разрядов числа. Если 0, то разрядность не ограничена
            </summary>
</member>
<member name="P:_1C.V8.Data.NumericQualifiers.Precision">
<summary>
            Число разрядов дробной части числа
            </summary>
</member>
<member name="P:_1C.V8.Data.NumericQualifiers.AllowedSign">
<summary>
            Допустимый знак числа
            </summary>
</member>
<member name="T:_1C.V8.Data.StringQualifiers">
<summary>
            Квалификаторы строки
            </summary>
</member>
<member name="M:_1C.V8.Data.StringQualifiers.#ctor">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.StringQualifiers" />
            </summary>
</member>
<member name="M:_1C.V8.Data.StringQualifiers.#ctor(System.Int32,_1C.V8.Data.AllowedLength)">
<summary>
            Копирующий конструктор
            </summary>
</member>
<member name="M:_1C.V8.Data.StringQualifiers.Equals(System.Object)">
<summary>
            Сравнение объектов
            </summary>
<param name="obj">Объект, с которым производится сравнение</param>
<returns>true - объекты имеют идентичное состояние, false - в противном случае</returns>
</member>
<member name="M:_1C.V8.Data.StringQualifiers.GetHashCode">
<summary>
            Хэш-код данного объекта
            </summary>
<returns>хэш-код</returns>
</member>
<member name="M:_1C.V8.Data.StringQualifiers.Clone">
<summary>
            Создает идентичную копию данного элемента.
            </summary>
<returns>Объект <see cref="T:_1C.V8.Data.StringQualifiers" />, создаваемый данным методом.</returns>
</member>
<member name="M:_1C.V8.Data.StringQualifiers.ToString">
<summary>
            Преобразование в строку
            </summary>
<returns>Строковое представлние квалификатора строки</returns>
</member>
<member name="M:_1C.V8.Data.StringQualifiers.Parse(System.String)">
<summary>
            Создание квалификатора строки из его строкового представления
            </summary>
<param name="str">Строковое представление квалификатора строки</param>
<returns>Квалификатор строки</returns>
</member>
<member name="P:_1C.V8.Data.StringQualifiers.Length">
<summary>
            Максимальная длина строки. Если 0, то допустимая длина только переменная
            </summary>
</member>
<member name="P:_1C.V8.Data.StringQualifiers.AllowedLength">
<summary>
            Допустимая длина строки. Фиксированная или переменная.
            Если длина строки 0, то допустимая длина только переменная
            </summary>
</member>
<member name="T:_1C.V8.Data.DateQualifiers">
<summary>
            Квалификаторы даты
            </summary>
</member>
<member name="M:_1C.V8.Data.DateQualifiers.#ctor">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.DateQualifiers" />
            </summary>
</member>
<member name="M:_1C.V8.Data.DateQualifiers.#ctor(_1C.V8.Data.DateFractions)">
<summary>
            Копирующий конструктор
            </summary>
</member>
<member name="M:_1C.V8.Data.DateQualifiers.Equals(System.Object)">
<summary>
            Сравнение объектов
            </summary>
<param name="obj">Объект, с которым производится сравнение</param>
<returns>true - объекты имеют идентичное состояние, false - в противном случае</returns>
</member>
<member name="M:_1C.V8.Data.DateQualifiers.GetHashCode">
<summary>
            Хэш-код данного объекта
            </summary>
<returns>хэш-код</returns>
</member>
<member name="M:_1C.V8.Data.DateQualifiers.Clone">
<summary>
            Создает идентичную копию данного элемента.
            </summary>
<returns>Объект <see cref="T:_1C.V8.Data.DateQualifiers" />, создаваемый данным методом.</returns>
</member>
<member name="M:_1C.V8.Data.DateQualifiers.ToString">
<summary>
            Преобразование в строку
            </summary>
<returns>Строковое представление квалификатора даты</returns>
</member>
<member name="M:_1C.V8.Data.DateQualifiers.Parse(System.String)">
<summary>
            Создание квалификатора даты из его строкового представления
            </summary>
<param name="str">Строковое представление квалификатора даты</param>
<returns>Квалификатор даты</returns>
</member>
<member name="P:_1C.V8.Data.DateQualifiers.DateFractions">
<summary>
            Представляемые части даты: Дата, Время или ДатаВремя
            </summary>
</member>
<member name="T:_1C.V8.Data.TypeCollection">
<summary>
            Коллекция типов. Каждый из типов определяется строкой с именем типа.
            При сравнении имен типов регистр букв не учитывается
            </summary>
</member>
<member name="M:_1C.V8.Data.TypeCollection.#ctor">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.TypeCollection" />
            </summary>
</member>
<member name="M:_1C.V8.Data.TypeCollection.#ctor(System.String[])">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.TypeCollection" />
            </summary>
<param name="names">Массив имен типов</param>
</member>
<member name="M:_1C.V8.Data.TypeCollection.Add(System.String)">
<summary>
            Добавление имени типа к коллекции типов.
            Если имя уже существует в коллекции, то ничего не происходит
            </summary>
<param name="name">Добавляемое имя</param>
</member>
<member name="M:_1C.V8.Data.TypeCollection.Names">
<summary>
            Получение всех имен, входящих в коллекцию в виде массива
            </summary>
<returns>Массив имен типов</returns>
</member>
<member name="M:_1C.V8.Data.TypeCollection.Clone">
<summary>
            Создает идентичную копию данного элемента.
            </summary>
<returns>Объект <see cref="T:_1C.V8.Data.TypeCollection" />, создаваемый данным методом.</returns>
</member>
<member name="T:_1C.V8.Data.TypeDescription">
<summary>
            Описание типов
            </summary>
</member>
<member name="M:_1C.V8.Data.TypeDescription.#ctor">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.TypeDescription" />
            </summary>
</member>
<member name="M:_1C.V8.Data.TypeDescription.#ctor(System.String)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.TypeDescription" />
            </summary>
<param name="typeInfoName">Имя типа</param>
</member>
<member name="M:_1C.V8.Data.TypeDescription.#ctor(_1C.V8.Data.TypeCollection,_1C.V8.Data.NumericQualifiers,_1C.V8.Data.StringQualifiers,_1C.V8.Data.DateQualifiers)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.TypeDescription" />
            </summary>
<param name="types">Массив типов</param>
<param name="numericQualifiers">Квалификаторы числа</param>
<param name="stringQualifiers">Квалификаторы строки</param>
<param name="dateQualifiers">Квалификаторы даты</param>
</member>
<member name="M:_1C.V8.Data.TypeDescription.#ctor(_1C.V8.Data.ComObject,_1C.V8.Data.ComObject,_1C.V8.Data.V8Metadata)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.TypeDescription" />
            </summary>
<param name="typeDescription">Объект метаданных с описанием типа</param>
<param name="connection">Соединение с ИБ</param>
<param name="metadata">Метаданные</param>
</member>
<member name="M:_1C.V8.Data.TypeDescription.GetTypeDescription(_1C.V8.Data.V8DbConnection)">
<summary>
            Возвращает COM-объект 1С:Предприятия с описанием типа
            </summary>
<param name="connection">Соединение с ИБ</param>
<returns>COM-объект 1С:Предприятия с описанием типа</returns>
</member>
<member name="M:_1C.V8.Data.TypeDescription.ToPresentation(System.String)">
<summary>
            Представление (пользовательское) описания типа
            </summary>
<param name="IBAlias">Имя ИБ</param>
<returns>Пользовательское представление описания типа</returns>
</member>
<member name="M:_1C.V8.Data.TypeDescription.ToString">
<summary>
            Преобразование в строку
            </summary>
<returns>Строковое представление описания типа</returns>
</member>
<member name="M:_1C.V8.Data.TypeDescription.Parse(System.String)">
<summary>
            Создание описания типа из его строкового представления
            </summary>
<param name="str">Строковое представления описания типа</param>
<returns>Описание типа</returns>
</member>
<member name="M:_1C.V8.Data.TypeDescription.NumericType(System.Int32)">
<summary>
            Создание описания типа Число
            </summary>
<param name="length">Общее число разрядов</param>
<returns>Описание типа Число</returns>
</member>
<member name="M:_1C.V8.Data.TypeDescription.NumericType(System.Int32,System.Int32)">
<summary>
            Создание описания типа Число
            </summary>
<param name="length">Общее число разрядов</param>
<param name="precision">Число разрядов дробной части</param>
<returns>Описание типа Число</returns>
</member>
<member name="M:_1C.V8.Data.TypeDescription.NumericType(System.Int32,System.Int32,_1C.V8.Data.AllowedSign)">
<summary>
            Создание описания типа Число
            </summary>
<param name="length">Общее число разрядов</param>
<param name="precision">Число разрядов дробной части</param>
<param name="allowedSign">Допустимый знак</param>
<returns>Описание типа Число</returns>
</member>
<member name="M:_1C.V8.Data.TypeDescription.StringType">
<summary>
            Создание описания типа Строка
            </summary>
<returns>Описание типа Строка</returns>
</member>
<member name="M:_1C.V8.Data.TypeDescription.StringType(System.Int32)">
<summary>
            Создание описания типа Строка
            </summary>
<param name="length">Длина строки (0 - переменная)</param>
<returns>Описание типа Строка</returns>
</member>
<member name="M:_1C.V8.Data.TypeDescription.StringType(System.Int32,_1C.V8.Data.AllowedLength)">
<summary>
            Создание описания типа Строка
            </summary>
<param name="length">Длина строки (0 - переменная)</param>
<param name="allowedLength">Допустимая длина</param>
<returns>Описание типа Строка</returns>
</member>
<member name="M:_1C.V8.Data.TypeDescription.DateType">
<summary>
            Создание описания типа Дата
            </summary>
<returns>Описание типа Дата</returns>
</member>
<member name="M:_1C.V8.Data.TypeDescription.DateType(_1C.V8.Data.DateFractions)">
<summary>
            Создание описания типа Дата
            </summary>
<param name="fractions">Допустимые части даты</param>
<returns>Описание типа Дата</returns>
</member>
<member name="M:_1C.V8.Data.TypeDescription.Equals(System.Object)">
<summary>
            Сравнение объектов
            </summary>
<param name="obj">Объект, с которым производится сравнение</param>
<returns>true - объекты имеют идентичное состояние, false - в противном случае</returns>
</member>
<member name="M:_1C.V8.Data.TypeDescription.GetHashCode">
<summary>
            Хэш-код данного объекта
            </summary>
<returns>хэш-код</returns>
</member>
<member name="M:_1C.V8.Data.TypeDescription.Clone">
<summary>
            Создает идентичную копию данного элемента.
            </summary>
<returns>Объект <see cref="T:_1C.V8.Data.TypeDescription" />, создаваемый данным методом.</returns>
</member>
<member name="P:_1C.V8.Data.TypeDescription.Types">
<summary>
            Коллекция типов, содержащаяся в данном Описании Типов
            </summary>
</member>
<member name="P:_1C.V8.Data.TypeDescription.NumericQualifiers">
<summary>
            Квалификаторы числа. Если установлены значения по умолчанию, то null
            </summary>
</member>
<member name="P:_1C.V8.Data.TypeDescription.StringQualifiers">
<summary>
            Квалификаторы строки. Если установлены значения по умолчанию, то null
            </summary>
</member>
<member name="P:_1C.V8.Data.TypeDescription.DateQualifiers">
<summary>
            Квалификаторы даты. Если установлены значения по умолчанию, то null
            </summary>
</member>
<member name="T:_1C.V8.Data.TypeUnknownException">
<summary>
            Исключительная ситуация при определении типа объекта
            </summary>
</member>
<member name="M:_1C.V8.Data.TypeUnknownException.#ctor">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.TypeUnknownException" />
            </summary>
</member>
<member name="T:_1C.V8.Data.TypeDescriptionConverter">
<summary>
            Конвертер для преобразования описания типа в/из строкового представления
            </summary>
</member>
<member name="M:_1C.V8.Data.TypeDescriptionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
<summary>
            Получает значение, показывающее, может ли конвертер преобразовывать объект заданного типа 
            источника в собственный тип.
            </summary>
<param name="context"><see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
<param name="sourceType">Тип <see cref="T:System.Type" />, который представляет конвертируемый тип.</param>
<returns>true, если конвертер может выполнить преобразование; в противном случае — false.</returns>
</member>
<member name="M:_1C.V8.Data.TypeDescriptionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
<summary>
            Преобразует указанный объект в тип, используемый конвертером.
            </summary>
<param name="context"><see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
<param name="culture"><see cref="T:System.Globalization.CultureInfo" />, используемый для поддержки возможностей локализации.</param>
<param name="value">Преобразуемый объект <see cref="T:System.Object" />.</param>
<returns>Объект <see cref="T:System.Object" />, представляющий указанный объект после преобразования.</returns>
</member>
<member name="M:_1C.V8.Data.TypeDescriptionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
<summary>
            Получает значение, показывающее, может ли данный конвертер преобразовать объект с помощью контекста в конечный тип.
            </summary>
<param name="context">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</param>
<param name="destinationType">Объект <see cref="T:System.Type" />, который представляет конвертируемый тип.</param>
<returns>Данный метод возвращает значение true, если объект может выполнить преобразование; 
            в противном случае возвращается значение — false.</returns>
</member>
<member name="M:_1C.V8.Data.TypeDescriptionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
<summary>
            Преобразует указанное значение объекта с помощью указанного контекста и аргументов в указанный тип.
            </summary>
<param name="context"><see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата. </param>
<param name="cultureInfo"><see cref="T:System.Globalization.CultureInfo" />, предоставляющий язык, в который нужно преобразовать объект.</param>
<param name="value">Преобразуемый объект <see cref="T:System.Object" />.</param>
<param name="destinationType">Объект <see cref="T:System.Type" />, для которого требуется преобразовать значение.</param>
<returns><see cref="T:System.Object" />, представляющий преобразованное значение.</returns>
</member>
<member name="T:_1C.V8.Data.Undefined">
<summary>
            Класс со значением "Неопределенно"
            </summary>
</member>
<member name="M:_1C.V8.Data.Undefined.Equals(System.Object)">
<summary>
            Сравнивает объекты типа Undefined.
            Для того чтобы быть равными объекты должны быть одного типа
            </summary>
<param name="obj">Объект, с которым производится сравнение</param>
<returns>true - объекты имеют идентичное состояние, false - в противном случае</returns>
</member>
<member name="P:_1C.V8.Data.Undefined.Value">
<summary>
            Через данное свойство можно получить единственное существующее значение типа Undefined
            </summary>
</member>
<member name="T:_1C.V8.Data.V8">
<summary>
            Класс со вспомогательными методами
            </summary>
</member>
<member name="M:_1C.V8.Data.V8.RegisterComObject(System.Object)">
<summary>
            Регистрация объекта объекта 1С:Предприятия для трассировки освобождения
            Com-объектов
            </summary>
<param name="obj"></param>
</member>
<member name="M:_1C.V8.Data.V8.ReleaseComObject(System.Object)">
<summary>
            Освобождение объекта 1С:Предприятия
            </summary>
<param name="obj"></param>
</member>
<member name="M:_1C.V8.Data.V8.Call(_1C.V8.Data.ComObject,System.String,System.Object[])">
<summary>
            Вызов метода у объекта 1С:Предприятия. В параметрах передаются объекты 1С:Предприятия
            </summary>
<param name="target">Объект, метод которого вызывается</param>
<param name="methodName">Имя метода</param>
<param name="methodParams">Параметры метода. Передаются объекты 1С:Предприятия</param>
<returns>Значение возвращенное методом</returns>
</member>
<member name="M:_1C.V8.Data.V8.Call(_1C.V8.Data.V8DbConnection,_1C.V8.Data.ComObject,System.String,System.Object[])">
<summary>
            Вызов метода у объекта 1С:Предприятия. В параметрах передаются объекты .NET
            </summary>
<param name="connection">Соединение с 1С:Предприятием</param>
<param name="target">Объект, метод которого вызывается</param>
<param name="methodName">Имя метода</param>
<param name="methodParams">Параметры метода. Передаются объекты .NET</param>
<returns>Значение возвращенное методом</returns>
</member>
<member name="M:_1C.V8.Data.V8.Call(_1C.V8.Data.V8DbConnection,_1C.V8.Data.ObjectRef,System.String,System.Object[])">
<summary>
            Вызов метода у объекта 1С:Предприятия. В параметрах передаются объекты .NET
            </summary>
<param name="connection">Соединение с 1С:Предприятием</param>
<param name="target">Объект, метод которого вызывается</param>
<param name="methodName">Имя метода</param>
<param name="methodParams">Параметры метода. Передаются объекты .NET</param>
<returns>Значение возвращенное методом</returns>
</member>
<member name="M:_1C.V8.Data.V8.CallByString(_1C.V8.Data.V8DbConnection,System.String,System.Object[])">
<summary>
            Вызов методов у объекта 1С:Предприятия. В параметрах передаются объекты .NET
            </summary>
<param name="connection">Соединение с 1С:Предприятием</param>
<param name="methodName">Строка, содержащая список методов</param>
<param name="methodParams">Параметры метода. Передаются объекты .NET</param>
<returns>Значение возвращенное вызовом последнего метода из списка</returns>
</member>
<member name="M:_1C.V8.Data.V8.CallByString(_1C.V8.Data.V8DbConnection,_1C.V8.Data.ObjectRef,System.String,System.Object[])">
<summary>
            Вызов методов у объекта 1С:Предприятия. В параметрах передаются объекты .NET
            </summary>
<param name="connection">Соединение с 1С:Предприятием</param>
<param name="target">Объект, метод которого вызывается</param>
<param name="methodName">Строка, содержащая список методов</param>
<param name="methodParams">Параметры метода. Передаются объекты .NET</param>
<returns>Значение возвращенное вызовом последнего метода из списка</returns>
</member>
<member name="M:_1C.V8.Data.V8.CallByString(_1C.V8.Data.V8DbConnection,_1C.V8.Data.ComObject,System.String,System.Object[])">
<summary>
            Вызов методов у объекта 1С:Предприятия. В параметрах передаются объекты .NET
            </summary>
<param name="connection">Соединение с 1С:Предприятием</param>
<param name="target">Объект, метод которого вызывается</param>
<param name="methodName">Строка, содержащая список методов</param>
<param name="methodParams">Параметры метода. Передаются объекты .NET</param>
<returns>Значение возвращенное вызовом последнего метода из списка</returns>
</member>
<member name="M:_1C.V8.Data.V8.Get(_1C.V8.Data.ComObject,System.String)">
<summary>
            Получить свойство объекта 1С:Предприятия. Возвращается объект 1С:Предприятия
            </summary>
<param name="target">Объект, чье свойство запрашивается</param>
<param name="propertyName">Имя свойства</param>
<returns>Значение свойства в виде объекта 1С:Предприятия</returns>
</member>
<member name="M:_1C.V8.Data.V8.Get(_1C.V8.Data.V8DbConnection,_1C.V8.Data.ComObject,System.String)">
<summary>
            Получить свойство объекта 1С:Предприятия. Возвращается объект .NET
            </summary>
<param name="connection">Соединение с 1С:Предприятием</param>
<param name="target">Объект, чье свойство запрашивается</param>
<param name="propertyName">Имя свойства</param>
<returns>Значение свойства в виде объекта .NET</returns>
</member>
<member name="M:_1C.V8.Data.V8.Get(_1C.V8.Data.V8DbConnection,_1C.V8.Data.ObjectRef,System.String)">
<summary>
            Получить свойство объекта 1С:Предприятия. Возвращается объект .NET
            </summary>
<param name="connection">Соединение с 1С:Предприятием</param>
<param name="target">Объект, чье свойство запрашивается</param>
<param name="propertyName">Имя свойства</param>
<returns>Значение свойства в виде объекта .NET</returns>
</member>
<member name="M:_1C.V8.Data.V8.Put(_1C.V8.Data.ComObject,System.String,System.Object)">
<summary>
            Установить свойство объекта 1С:Предприятия. В параметре передается объект 1С:Предприятия
            </summary>
<param name="target">Объект, свойство которого устанавливается</param>
<param name="propertyName">Имя свойства</param>
<param name="propertyValue">Значение свойства в виде объекта 1С:Предприятия</param>
</member>
<member name="M:_1C.V8.Data.V8.Put(_1C.V8.Data.V8DbConnection,_1C.V8.Data.ComObject,System.String,System.Object)">
<summary>
            Установить свойство объекта 1С:Предприятия. В параметре передается объект .NET
            </summary>
<param name="connection">Соединение с 1С:Предприятием</param>
<param name="target">Объект, свойство которого устанавливается</param>
<param name="propertyName">Имя свойства</param>
<param name="propertyValue">Значение свойства в виде объекта .NET</param>
</member>
<member name="M:_1C.V8.Data.V8.GetString(System.String)">
<summary>
            Получение локализованной строки
            </summary>
<param name="name">Идентификатор строки</param>
<returns>Локализованную строку</returns>
</member>
<member name="M:_1C.V8.Data.V8.GetString(System.String,System.String)">
<summary>
            Получение локализованной строки
            </summary>
<param name="name">Идентификатор строки</param>
<param name="lang">Язык локализации</param>
<returns>Локализованную строку</returns>
</member>
<member name="M:_1C.V8.Data.V8.ConvertValueV8ToNet(System.Object,_1C.V8.Data.V8DbConnection)">
<summary>
            Конвертация значения 1С:Предприятия в значение .NET
            </summary>
<param name="value">Значение, которое надо конвертировать</param>
<param name="connection">Соединение, из которого получено значение</param>
<returns>Значение .NET</returns>
</member>
<member name="M:_1C.V8.Data.V8.ConvertValueV8ToNet(System.Object,_1C.V8.Data.V8DbConnection,_1C.V8.Data.V8TypeInfo)">
<summary>
            Конвертация значения 1С:Предприятия в значение .NET
            </summary>
<param name="value">Значение, которое надо конвертировать</param>
<param name="connection">Соединение, из которого получено значение</param>
<param name="typeInfo">Информация о типе</param>
<returns>Значение .NET</returns>
</member>
<member name="M:_1C.V8.Data.V8.TypeNameFrom1CValue(System.Object,_1C.V8.Data.V8DbConnection)">
<summary>
            Имя типа из значения 1С:Предприятия
            </summary>
<param name="value">Значение</param>
<param name="connection">Соединение, из которого получено значение</param>
<returns>Имя типа</returns>
</member>
<member name="M:_1C.V8.Data.V8.ConvertValueNetToV8(System.Object,_1C.V8.Data.V8DbConnection)">
<summary>
            Конвертация значения .NET в значение 1С:Предприятия
            </summary>
<param name="value">Значение</param>
<param name="connection">Соединение с 1С:Предприятием</param>
<returns>Значение 1С:Предприятия</returns>
</member>
<member name="M:_1C.V8.Data.V8.TypeNameFromValue(System.Object)">
<summary>
            Получить имя типа из значения
            </summary>
<param name="value">Значение</param>
<returns>Имя типа</returns>
</member>
<member name="M:_1C.V8.Data.V8.ToInvariantString(System.Object)">
<summary>
            Преобразование в строку
            </summary>
<param name="o">Объект, подлежащий преобразованию</param>
<returns>Строковое представление объекта</returns>
</member>
<member name="M:_1C.V8.Data.V8.GetObject(_1C.V8.Data.V8TypeInfo,System.String)">
<summary>
            Создание объекта по его имени типа с заданным значением
            </summary>
<param name="typeInfo">Тип значения</param>
<param name="val">Значение</param>
<returns>Объект заданного типа</returns>
</member>
<member name="M:_1C.V8.Data.V8.GetObject(_1C.V8.Data.V8DbConnection,_1C.V8.Data.ObjectRef)">
<summary>
            Возвращает объект информационной базы по ссылке.
            </summary>
<param name="connection">Соединение с ИБ.</param>
<param name="reference">Ссылка.</param>
<returns>Объект информационной базы по ссылке</returns>
</member>
<member name="M:_1C.V8.Data.V8.FromInvariantString(System.String,_1C.V8.Data.V8TypeInfo)">
<summary>
            Создание объекта по его строковому представлению
            </summary>
<param name="str">Строковое представление объекта</param>
<param name="typeInfo">Информация о типе объекта</param>
<returns>Созданный объект</returns>
</member>
<member name="M:_1C.V8.Data.V8.From1CValue(System.Object,_1C.V8.Data.V8DbConnection,_1C.V8.Data.V8TypeInfo)">
<summary>
            Создание объекта из значения 1С:Предприятия
            </summary>
<param name="value">Значение 1С:Предприятия</param>
<param name="connection">Соединение с ИБ</param>
<param name="typeInfo">Информация о типе</param>
<returns>Созданный объект</returns>
</member>
<member name="M:_1C.V8.Data.V8.GetEnumPresentation(System.Enum,_1C.V8.Data.V8Metadata)">
<summary>
            Возвращает представление для значения перечислимого типа.
            </summary>
<param name="value">Значение перечислимого типа.</param>
<param name="metadata">Метаданные.</param>
<returns></returns>
</member>
<member name="T:_1C.V8.Data.V8.TraceComObject">
<summary>
            Класс для трассировки использования Com-объектов.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8.TraceComObject.Start">
<summary>
            Стартует механизм отслеживания выделения и освобождения 
            объектов 1С:Предпрития
            </summary>
</member>
<member name="M:_1C.V8.Data.V8.TraceComObject.Stop">
<summary>
            Останавливает механизм отслеживания выделения и освобождения 
            объектов 1С:Предпрития
            </summary>
</member>
<member name="M:_1C.V8.Data.V8.TraceComObject.GetStackTrace(System.Int32)">
<summary>
            Возвращает стек вызовов при создании Com-объекта.
            </summary>
<param name="index">Индекс неосвобожденного Com-объекта</param>
<returns></returns>
</member>
<member name="M:_1C.V8.Data.V8.TraceComObject.RegisterComObject(System.Object)">
<summary>
            Регистрация объекта объекта 1С:Предприятия для трассировки освобождения
            Com-объектов
            </summary>
<param name="obj"></param>
</member>
<member name="M:_1C.V8.Data.V8.TraceComObject.ReleaseComObject(System.Object)">
<summary>
            Освобождение объекта 1С:Предприятия
            </summary>
<param name="obj"></param>
</member>
<member name="P:_1C.V8.Data.V8.TraceComObject.IsStarted">
<summary>
            Возвращает состояние механизма трассировки Com-объектов.
            </summary>
<returns></returns>
</member>
<member name="P:_1C.V8.Data.V8.TraceComObject.Count">
<summary>
            Количество неосвобожденных Com-объектов.
            </summary>
</member>
<member name="T:_1C.V8.Data.IntCollection">
<summary>
            Строго типизированная коллекция, содержащая значения типа int
            </summary>
</member>
<member name="M:_1C.V8.Data.IntCollection.Add(System.Int32)">
<summary>
            Добавляет строку в конец класса <see cref="T:_1C.V8.Data.IntCollection" />.
            </summary>
<param name="value">Добавляемое значение</param>
<returns>Позиция, в которую вставлено значение</returns>
</member>
<member name="M:_1C.V8.Data.IntCollection.IndexOf(System.Int32)">
<summary>
            Возвращает индекс позиции, в которой находится искомое значение
            </summary>
<param name="value">Искомое значение</param>
<returns>Индекс позиции, в которой находится значение. 
            -1 - если такого значения нет в коллекции</returns>
</member>
<member name="M:_1C.V8.Data.IntCollection.Insert(System.Int32,System.Int32)">
<summary>
            Вставляет значение в коллекцию в заданную позицию
            </summary>
<param name="index">Индекс позиции, в которую вставляется значение</param>
<param name="value">Значение</param>
</member>
<member name="M:_1C.V8.Data.IntCollection.Remove(System.Int32)">
<summary>
            Удаляет значение из коллекции
            </summary>
<param name="value">Удаляемое значение</param>
</member>
<member name="M:_1C.V8.Data.IntCollection.Contains(System.Int32)">
<summary>
            Определяет, содержится ли указанное значение в коллекции
            </summary>
<param name="value">Искомое значение</param>
<returns>true если значение содержится в коллекции</returns>
</member>
<member name="P:_1C.V8.Data.IntCollection.Item(System.Int32)">
<summary>
            Возвращает значение по его индексу в коллекции
            </summary>
</member>
<member name="T:_1C.V8.Data.StringCollectionCollection">
<summary>
            Строго типизированная коллекция, содержащая значения типа StringCollection
            </summary>
</member>
<member name="M:_1C.V8.Data.StringCollectionCollection.Add(System.Collections.Specialized.StringCollection)">
<summary>
            Добавляет заданный объект <see cref="T:System.Collections.Specialized.StringCollection" /> в коллекцию.
            </summary>
<param name="value"><see cref="T:System.Collections.Specialized.StringCollection" />, который требуется добавить в коллекцию.</param>
<returns>Индекс, указывающий, куда был вставлен новый элемент.</returns>
</member>
<member name="M:_1C.V8.Data.StringCollectionCollection.IndexOf(System.Collections.Specialized.StringCollection)">
<summary>
            Возвращает индекс позиции, в которой находится искомое значение
            </summary>
<param name="value">Искомое значение</param>
<returns>Индекс позиции, в которой находится значение. 
            -1 - если такого значения нет в коллекции</returns>
</member>
<member name="M:_1C.V8.Data.StringCollectionCollection.Insert(System.Int32,System.Collections.Specialized.StringCollection)">
<summary>
            Вставляет значение в коллекцию в заданную позицию
            </summary>
<param name="index">Индекс позиции, в которую вставляется значение</param>
<param name="value">Значение</param>
</member>
<member name="M:_1C.V8.Data.StringCollectionCollection.Remove(System.Collections.Specialized.StringCollection)">
<summary>
            Удаляет значение из коллекции
            </summary>
<param name="value">Удаляемое значение</param>
</member>
<member name="M:_1C.V8.Data.StringCollectionCollection.Contains(System.Collections.Specialized.StringCollection)">
<summary>
            Определяет, содержится ли указанное значение в коллекции
            </summary>
<param name="value">Искомое значение</param>
<returns>true если значение содержится в коллекции</returns>
</member>
<member name="P:_1C.V8.Data.StringCollectionCollection.Item(System.Int32)">
<summary>
            Возвращает значение по его индексу в коллекции
            </summary>
</member>
<member name="T:_1C.V8.Data.TypesCollection">
<summary>
            Строго типизированная коллекция, содержащая значения типа Type
            </summary>
</member>
<member name="M:_1C.V8.Data.TypesCollection.Add(System.Type)">
<summary>
            Добавляет заданный объект <see cref="T:System.Type" /> в коллекцию.
            </summary>
<param name="value"><see cref="T:System.Type" />, который требуется добавить в коллекцию.</param>
<returns>Индекс, указывающий, куда был вставлен новый элемент.</returns>
</member>
<member name="M:_1C.V8.Data.TypesCollection.IndexOf(System.Type)">
<summary>
            Возвращает индекс позиции, в которой находится искомое значение
            </summary>
<param name="value">Искомое значение</param>
<returns>Индекс позиции, в которой находится значение. 
            -1 - если такого значения нет в коллекции</returns>
</member>
<member name="M:_1C.V8.Data.TypesCollection.Insert(System.Int32,System.Type)">
<summary>
            Вставляет значение в коллекцию в заданную позицию
            </summary>
<param name="index">Индекс позиции, в которую вставляется значение</param>
<param name="value">Значение</param>
</member>
<member name="M:_1C.V8.Data.TypesCollection.Remove(System.Type)">
<summary>
            Удаляет значение из коллекции
            </summary>
<param name="value">Удаляемое значение</param>
</member>
<member name="M:_1C.V8.Data.TypesCollection.Contains(System.Type)">
<summary>
            Определяет, содержится ли указанное значение в коллекции
            </summary>
<param name="value">Искомое значение</param>
<returns>true если значение содержится в коллекции</returns>
</member>
<member name="P:_1C.V8.Data.TypesCollection.Item(System.Int32)">
<summary>
            Возвращает значение по его индексу в коллекции
            </summary>
</member>
<member name="T:_1C.V8.Data.ComObject">
<summary>
            Обертка над COM-объектом. Служит для освобождения всех ресурсов, связанных с объектом
            при его уничтожении
            </summary>
</member>
<member name="M:_1C.V8.Data.ComObject.#ctor(System.Object)">
<summary>
            Конструктор
            </summary>
<param name="o">COM-объект</param>
</member>
<member name="M:_1C.V8.Data.ComObject.Finalize">
<summary>
            Деструктор
            </summary>
</member>
<member name="M:_1C.V8.Data.ComObject.Dispose">
<summary>
            Освобождает захваченные ресурсы
            </summary>
</member>
<member name="M:_1C.V8.Data.ComObject.Dispose(System.Boolean)">
<summary>
            Освобождает захваченные ресурсы
            </summary>
<param name="disposing"></param>
</member>
<member name="P:_1C.V8.Data.ComObject.comObject">
<summary>
            COM-объект
            </summary>
</member>
<member name="T:_1C.V8.Data.V8AccMDProvider">
<summary>
            Предоставляет информацию о типах и таблицах модуля "Бухгалтерия"
            </summary>
</member>
<member name="T:_1C.V8.Data.V8MDProviderBase">
<summary>
            Объект, поставляющей информацию о типах
            </summary>
</member>
<member name="M:_1C.V8.Data.V8MDProviderBase.GetTabularPartsTablesInfo(_1C.V8.Data.ComObject,_1C.V8.Data.ComObject,System.String,System.String,_1C.V8.Data.ComObject,_1C.V8.Data.V8Metadata,_1C.V8.Data.V8TablesInfoCollection,System.Collections.Specialized.StringCollection,System.Boolean,_1C.V8.Data.ComObject[],System.String[])">
<summary>
            Описание таблиц табличных частей
            </summary>
<param name="md">Объект "Метаданные"</param>
<param name="mdObject">Объект метаданных</param>
<param name="referenceTypeName">Имя типа ссылки на объект</param>
<param name="prefix">Префикс имени таблицы</param>
<param name="connection">Соединение с ИБ</param>
<param name="metadata">Метаданные</param>
<param name="tablesInfo">Информация о таблицах</param>
<param name="tableList">Список, в который добавляется информации о табличной части</param>
<param name="needUsage">Заполнять реквизит "Использование"</param>
<param name="connections">Соединения с ИБ для каждого языка</param>
<param name="mdNames">Список методов метаданных, для получения этого объекта</param>
<returns>Имена табличных частей</returns>
</member>
<member name="M:_1C.V8.Data.V8MDProviderBase.GetPropertiesFieldsInfo(_1C.V8.Data.ComObject,_1C.V8.Data.ComObject,_1C.V8.Data.V8FieldsCollection,_1C.V8.Data.ComObject,System.Boolean,_1C.V8.Data.V8Metadata,_1C.V8.Data.ComObject[],System.Object[])">
<summary>
            описание полей по реквизитам объекта
            </summary>
<param name="md">Объект "Метаданные"</param>
<param name="mdObject">Объект метаданных</param>
<param name="fieldsInfo">Информация о полях таблицы</param>
<param name="connection">Соединение с ИБ</param>
<param name="needUsage">Заполнять реквизит "Использование"</param>
<param name="metadata">Метаданные</param>
<param name="connections">Соединения с ИБ для каждого языка</param>
<param name="mdNames">Список методов метаданных, для получения этого объекта</param>
</member>
<member name="M:_1C.V8.Data.V8MDProviderBase.GetPropertiesFieldsInfoForObject(_1C.V8.Data.ComObject,_1C.V8.Data.ComObject,_1C.V8.Data.V8FieldsCollection,_1C.V8.Data.ComObject,System.Boolean,_1C.V8.Data.V8Metadata,_1C.V8.Data.ComObject[],System.Object[])">
<summary>
            описание полей по реквизитам объекта
            </summary>
<param name="md">Объект "Метаданные"</param>
<param name="mdObject">Объект метаданных</param>
<param name="fieldsInfo">Информация о полях таблицы</param>
<param name="connection">Соединение с ИБ</param>
<param name="needUsage">Заполнять реквизит "Использование"</param>
<param name="metadata">Метаданные</param>
<param name="connections">Соединения с ИБ для каждого языка</param>
<param name="mdNames">Список методов метаданных, для получения этого объекта</param>
</member>
<member name="M:_1C.V8.Data.V8MDProviderBase.TypeDomainByMDList(_1C.V8.Data.ComObject,System.Collections.Hashtable)">
<summary>
            Получить описание типа по списку объектов метаданных
            </summary>
</member>
<member name="M:_1C.V8.Data.V8MDProviderBase.TypeDomainByMDList(_1C.V8.Data.TypeDescription,System.Collections.IEnumerable,System.Collections.Hashtable)">
<summary>
            Получить описание типа по списку объектов метаданных
            </summary>
</member>
<member name="M:_1C.V8.Data.V8MDProviderBase.GetMainPresentationLength(_1C.V8.Data.ComObject,_1C.V8.Data.ComObject)">
<summary>
            Получение длины основного представления
            </summary>
<param name="enumMainPresentation">перечисление типов основного представления</param>
<param name="metadataObject">объект метаданных</param>
</member>
<member name="M:_1C.V8.Data.V8MDProviderBase.MdObjFullName(_1C.V8.Data.ComObject)">
<summary>
            Получить полное имя объекта метаданных
            </summary>
<param name="mdObj">Объект метаданных</param>
<returns>Полное имя объекта метаданных</returns>
</member>
<member name="M:_1C.V8.Data.V8MDProviderBase.CreateReferenceType(System.CodeDom.CodeNamespace,System.String,System.String,System.String,System.String)">
<summary>
            Создает описание типа, для записи в assembly
            </summary>
<param name="ns">Пространство имен</param>
<param name="name">Имя типа</param>
<param name="xmlName">XML имя типа</param>
<param name="IBAlias">Имя ИБ</param>
<param name="comment">Комментарий для типа</param>
</member>
<member name="M:_1C.V8.Data.V8MDProviderBase.ValueByStringFields(_1C.V8.Data.ComObject)">
<summary>
            Получить список полей, по которым осуществляется 
            поиск значения по строке
            </summary>
<param name="mdObj">Объект метаданных</param>
<returns>Список полей</returns>
</member>
<member name="M:_1C.V8.Data.V8MDProviderBase.SetPresentationForLangs(System.String[],_1C.V8.Data.ComObject[],System.Object[],_1C.V8.Data.V8TableInfo)">
<summary>
            Заполняет представление таблицы для разных языков
            </summary>
<param name="langCodes">Список языков</param>
<param name="connections">Соединения с ИБ для каждого языка</param>
<param name="mdNames">Список методов метаданных, для получения этого объекта</param>
<param name="tableInfo">Информация о таблице</param>
</member>
<member name="M:_1C.V8.Data.V8MDProviderBase.SetPresentationForLangs(System.String[],_1C.V8.Data.ComObject[],System.Object[],System.String,_1C.V8.Data.V8FieldInfo)">
<summary>
            Заполняет представления поля таблицы для разных языков
            </summary>
<param name="langCodes">Список языков</param>
<param name="connections">Соединения с ИБ для каждого языка</param>
<param name="mdNames">Список методов метаданных, для получения этого объекта</param>
<param name="suffix">Суффикс имени поля</param>
<param name="fieldInfo">Информация о поле таблицы</param>
</member>
<member name="M:_1C.V8.Data.V8AccMDProvider.CreateTypes(_1C.V8.Data.ComObject,System.String,System.Int32,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace)">
<summary>
            Генерация типов данных .NET по метаданным
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="IBAlias">Имя метаданныx</param>
<param name="builtInLang">Вариант встроенного языка</param>
<param name="compileUnit">Единица компиляции, в которой создаются типы</param>
<param name="codeNamespace">Namespace для размещения типов</param>
</member>
<member name="M:_1C.V8.Data.V8AccMDProvider.GetTypesInfo(_1C.V8.Data.ComObject,_1C.V8.Data.V8Metadata,System.Collections.Hashtable,_1C.V8.Data.ComObject[])">
<summary>
            Получить информацию о типах
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="metadata">Метаданные</param>
<param name="mdToType">Соответстсвие имени объекта метаданных типу ссылки</param>
<param name="connections">Соединения с ИБ для каждого языка</param>
</member>
<member name="M:_1C.V8.Data.V8AccMDProvider.GetTablesInfo(_1C.V8.Data.ComObject,_1C.V8.Data.V8Metadata,System.Collections.Hashtable,System.Collections.Hashtable,System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.ListDictionary,System.Collections.Specialized.NameValueCollection,_1C.V8.Data.ComObject[])">
<summary>
            Получить информацию о таблицах
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="metadata">Метаданные</param>
<param name="mdToType">Соответстсвие имени объекта метаданных типу ссылки</param>
<param name="mdToTable">Соответстсвие имени объекта метаданных типу таблицы</param>
<param name="actionsToRecorder">Соответствие движений регистратора имени объекта метаданных</param>
<param name="subTables">Соответствие подчиненных таблиц имени объекта метаданных</param>
<param name="inputOnBasis">Соответствие объектов ввода на основании имени объекта метаданных</param>
<param name="connections">Соединения с ИБ для каждого языка</param>
</member>
<member name="T:_1C.V8.Data.V8ChartOfAccountsHelper">
<summary>
            Объект для создания плана счетов
            </summary>
</member>
<member name="T:_1C.V8.Data.V8ObjectHelper">
<summary>
            вспомогательный объект, 
            для осуществления операций над прикладными 
            объектами 1С:Предприятия
            </summary>
</member>
<member name="M:_1C.V8.Data.V8ObjectHelper.#ctor">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8ObjectHelper" />
            </summary>
</member>
<member name="M:_1C.V8.Data.V8ObjectHelper.Create(_1C.V8.Data.V8DbConnection,_1C.V8.Data.V8TableInfo,_1C.V8.Data.V8DataParameterCollection)">
<summary>
            Создать новый объект
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="tableInfo">Информация о таблице создаваемого объекта</param>
<param name="parameters">Параметры для получения информации что создавать</param>
<returns>Созданный объект</returns>
</member>
<member name="M:_1C.V8.Data.V8ObjectHelper.InitNewObject(_1C.V8.Data.ComObject)">
<summary>
            Проинициализировать новый объект
            </summary>
<param name="obj">Новый объект</param>
</member>
<member name="M:_1C.V8.Data.V8ObjectHelper.ActionPararameterValues(System.String,_1C.V8.Data.ComObject,_1C.V8.Data.ComObject)">
<summary>
            Получить значения параметров метода для отработки действия
            </summary>
<param name="actionName">Имя действия</param>
<param name="obj">Объект, над которым выполняется действие</param>
<param name="connection">Соединение с 1С:Предприятием</param>
<returns>Список значений параметров</returns>
</member>
<member name="M:_1C.V8.Data.V8ObjectHelper.CheckActionAccessRight(System.String,_1C.V8.Data.V8TableInfo,_1C.V8.Data.ComObject)">
<summary>
            Получить значения параметров метода для отработки действия
            </summary>
<param name="actionName">Имя действия</param>
<param name="tableInfo">Описание таблицы</param>
<param name="connection">Соединение с 1С:Предприятием</param>
<returns>Разрешено или нет данное действие над объектом</returns>
</member>
<member name="M:_1C.V8.Data.V8ObjectHelper.GetTypeDescriptions(System.Collections.ArrayList,System.String,_1C.V8.Data.V8DbConnection,_1C.V8.Data.V8Metadata)">
<summary>
            Получить описания типов для списка переданных ссылок.
            Возвращается Hashmap, в котором каждому значению ссылки
            соответствует ArrayList описаний типов или null. 
            </summary>
<param name="refs">Список ObjectRef'ов</param>
<param name="tableName">имя таблицы</param>
<param name="connection">соединение с ИБ</param>
<param name="metadata">метаданные</param>
<returns>Список соответствий ссылок и их описаний типов</returns>
</member>
<member name="P:_1C.V8.Data.V8ObjectHelper.Actions">
<summary>
            Список дополнительных действий
            </summary>
<returns>Список дополнительных действий</returns>
</member>
<member name="M:_1C.V8.Data.V8ChartOfAccountsHelper.Create(_1C.V8.Data.V8DbConnection,_1C.V8.Data.V8TableInfo,_1C.V8.Data.V8DataParameterCollection)">
<summary>
            Создать новый объект
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="tableInfo">Информация о таблице создаваемого объекта</param>
<param name="parameters">Параметры для получения информации что создавать</param>
<returns>Созданный объект</returns>
</member>
<member name="M:_1C.V8.Data.V8ChartOfAccountsHelper.GetTypeDescriptions(System.Collections.ArrayList,System.String,_1C.V8.Data.V8DbConnection,_1C.V8.Data.V8Metadata)">
<summary>
            Получить описания типов для списка переданных ссылок.
            Возвращается Hashmap, в котором каждому значению ссылки
            соответствует ArrayList описаний типов или null. 
            </summary>
<param name="refs">Список ObjectRef'ов</param>
<param name="tableName">имя таблицы</param>
<param name="connection">соединение с ИБ</param>
<param name="metadata">метаданные</param>
<returns>Список соответствий ссылок и их описаний типов</returns>
</member>
<member name="T:_1C.V8.Data.V8AccountRegisterHelper">
<summary>
            Объект для создания регистра бухгалтерии
            </summary>
</member>
<member name="M:_1C.V8.Data.V8AccountRegisterHelper.Create(_1C.V8.Data.V8DbConnection,_1C.V8.Data.V8TableInfo,_1C.V8.Data.V8DataParameterCollection)">
<summary>
            Создать новый объект
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="tableInfo">Информация о таблице создаваемого объекта</param>
<param name="parameters">Параметры для получения информации что создавать</param>
<returns>Созданный объект</returns>
</member>
<member name="T:_1C.V8.Data.V8BackEndMDProvider">
<summary>
            Предоставляет информацию о типах
            </summary>
</member>
<member name="M:_1C.V8.Data.V8BackEndMDProvider.CreateTypes(_1C.V8.Data.ComObject,System.String,System.Int32,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace)">
<summary>
            Генерация типов данных .NET по метаданным
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="IBAlias">Имя метаданныx</param>
<param name="builtInLang">Вариант встроенного языка</param>
<param name="compileUnit">Единица компиляции, в которой создаются типы</param>
<param name="codeNamespace">Namespace для размещения типов</param>
</member>
<member name="M:_1C.V8.Data.V8BackEndMDProvider.GetTypesInfo(_1C.V8.Data.ComObject,_1C.V8.Data.V8Metadata,System.Collections.Hashtable,_1C.V8.Data.ComObject[])">
<summary>
            Получить информацию о типах
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="metadata">Метаданные</param>
<param name="mdToType">Соответстсвие имени объекта метаданных типу ссылки</param>
<param name="connections">Соединения с ИБ для каждого языка</param>
</member>
<member name="M:_1C.V8.Data.V8BackEndMDProvider.GetTablesInfo(_1C.V8.Data.ComObject,_1C.V8.Data.V8Metadata,System.Collections.Hashtable,System.Collections.Hashtable,System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.ListDictionary,System.Collections.Specialized.NameValueCollection,_1C.V8.Data.ComObject[])">
<summary>
            Получить информацию о таблицах
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="metadata">Метаданные</param>
<param name="mdToType">Соответстсвие имени объекта метаданных типу ссылки</param>
<param name="mdToTable">Соответстсвие имени объекта метаданных типу таблицы</param>
<param name="actionsToRecorder">Соответствие движений регистратора имени объекта метаданных</param>
<param name="subTables">Соответствие подчиненных таблиц имени объекта метаданных</param>
<param name="inputOnBasis">Соответствие объектов ввода на основании имени объекта метаданных</param>
<param name="connections">Соединения с ИБ для каждого языка</param>
</member>
<member name="T:_1C.V8.Data.V8ExchangePlanHelper">
<summary>
            Объект для создания плана обмена
            </summary>
</member>
<member name="M:_1C.V8.Data.V8ExchangePlanHelper.Create(_1C.V8.Data.V8DbConnection,_1C.V8.Data.V8TableInfo,_1C.V8.Data.V8DataParameterCollection)">
<summary>
            Создать новый объект
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="tableInfo">Информация о таблице создаваемого объекта</param>
<param name="parameters">Параметры для получения информации что создавать</param>
<returns>Созданный объект</returns>
</member>
<member name="M:_1C.V8.Data.V8ExchangePlanHelper.InitNewObject(_1C.V8.Data.ComObject)">
<summary>
            Проинициализировать новый объект
            </summary>
<param name="obj">Новый объект</param>
</member>
<member name="T:_1C.V8.Data.V8BasicMDProvider">
<summary>
            Предоставляет информацию о типах
            </summary>
</member>
<member name="M:_1C.V8.Data.V8BasicMDProvider.CreateTypes(_1C.V8.Data.ComObject,System.String,System.Int32,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace)">
<summary>
            Генерация типов данных .NET по метаданным
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="IBAlias">Имя метаданныx</param>
<param name="builtInLang">Вариант встроенного языка</param>
<param name="compileUnit">Единица компиляции, в которой создаются типы</param>
<param name="codeNamespace">Namespace для размещения типов</param>
</member>
<member name="M:_1C.V8.Data.V8BasicMDProvider.GetTypesInfo(_1C.V8.Data.ComObject,_1C.V8.Data.V8Metadata,System.Collections.Hashtable,_1C.V8.Data.ComObject[])">
<summary>
            Получить информацию о типах
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="metadata">Метаданные</param>
<param name="mdToType">Соответстсвие имени объекта метаданных типу ссылки</param>
<param name="connections">Соединения с ИБ для каждого языка</param>
</member>
<member name="M:_1C.V8.Data.V8BasicMDProvider.GetTablesInfo(_1C.V8.Data.ComObject,_1C.V8.Data.V8Metadata,System.Collections.Hashtable,System.Collections.Hashtable,System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.ListDictionary,System.Collections.Specialized.NameValueCollection,_1C.V8.Data.ComObject[])">
<summary>
            Получить информацию о таблицах
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="metadata">Метаданные</param>
<param name="mdToType">Соответстсвие имени объекта метаданных типу ссылки</param>
<param name="mdToTable">Соответстсвие имени объекта метаданных типу таблицы</param>
<param name="actionsToRecorder">Соответствие движений регистратора имени объекта метаданных</param>
<param name="subTables">Соответствие подчиненных таблиц имени объекта метаданных</param>
<param name="inputOnBasis">Соответствие объектов ввода на основании имени объекта метаданных</param>
<param name="connections">Соединения с ИБ для каждого языка</param>
</member>
<member name="T:_1C.V8.Data.V8CatalogHelper">
<summary>
            Объект для создания справочника
            </summary>
</member>
<member name="M:_1C.V8.Data.V8CatalogHelper.Create(_1C.V8.Data.V8DbConnection,_1C.V8.Data.V8TableInfo,_1C.V8.Data.V8DataParameterCollection)">
<summary>
            Создать новый объект
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="tableInfo">Информация о таблице создаваемого объекта</param>
<param name="parameters">Параметры для получения информации что создавать</param>
<returns>Созданный объект</returns>
</member>
<member name="M:_1C.V8.Data.V8CatalogHelper.InitNewObject(_1C.V8.Data.ComObject)">
<summary>
            Проинициализировать новый объект
            </summary>
<param name="obj">Новый объект</param>
</member>
<member name="T:_1C.V8.Data.V8DocumentHelper">
<summary>
            Объект для создания документа
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DocumentHelper.#ctor(System.Boolean,System.Boolean,System.String[])">
<summary>
            Конструктор
            </summary>
<param name="allowPosting">Разрешить проведение</param>
<param name="operatingPostMode">Режим проведения</param>
<param name="languages">Список языков конфигурации</param>
</member>
<member name="M:_1C.V8.Data.V8DocumentHelper.Create(_1C.V8.Data.V8DbConnection,_1C.V8.Data.V8TableInfo,_1C.V8.Data.V8DataParameterCollection)">
<summary>
            Создать новый объект
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="tableInfo">Информация о таблице создаваемого объекта</param>
<param name="parameters">Параметры для получения информации что создавать</param>
<returns>Созданный объект</returns>
</member>
<member name="M:_1C.V8.Data.V8DocumentHelper.InitNewObject(_1C.V8.Data.ComObject)">
<summary>
            Проинициализировать новый объект
            </summary>
<param name="obj">Новый объект</param>
</member>
<member name="M:_1C.V8.Data.V8DocumentHelper.ActionPararameterValues(System.String,_1C.V8.Data.ComObject,_1C.V8.Data.ComObject)">
<summary>
            Получить значения параметров метода для отработки действия
            </summary>
<param name="actionName">Имя действия</param>
<param name="obj">Объект, над которым выполняется действие</param>
<param name="connection">Соединение с 1С:Предприятием</param>
<returns>Список значений параметров</returns>
</member>
<member name="M:_1C.V8.Data.V8DocumentHelper.CheckActionAccessRight(System.String,_1C.V8.Data.V8TableInfo,_1C.V8.Data.ComObject)">
<summary>
            Получить значения параметров метода для отработки действия
            </summary>
<param name="actionName">Имя действия</param>
<param name="tableInfo">Описание таблицы</param>
<param name="connection">Соединение с 1С:Предприятием</param>
<returns>Разрешено или нет данное действие над объектом</returns>
</member>
<member name="P:_1C.V8.Data.V8DocumentHelper.Actions">
<summary>
            Список дополнительных действий
            </summary>
<returns>Список дополнительных действий</returns>
</member>
<member name="T:_1C.V8.Data.V8CharacteristicHelper">
<summary>
            Объект для создания ПВХ
            </summary>
</member>
<member name="M:_1C.V8.Data.V8CharacteristicHelper.Create(_1C.V8.Data.V8DbConnection,_1C.V8.Data.V8TableInfo,_1C.V8.Data.V8DataParameterCollection)">
<summary>
            Создать новый объект
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="tableInfo">Информация о таблице создаваемого объекта</param>
<param name="parameters">Параметры для получения информации что создавать</param>
<returns>Созданный объект</returns>
</member>
<member name="M:_1C.V8.Data.V8CharacteristicHelper.InitNewObject(_1C.V8.Data.ComObject)">
<summary>
            Проинициализировать новый объект
            </summary>
<param name="obj">Новый объект</param>
</member>
<member name="M:_1C.V8.Data.V8CharacteristicHelper.GetTypeDescriptions(System.Collections.ArrayList,System.String,_1C.V8.Data.V8DbConnection,_1C.V8.Data.V8Metadata)">
<summary>
            Получить описания типов для списка переданных ссылок.
            Возвращается Hashmap, в котором каждому значению ссылки
            соответствует ArrayList описаний типов или null. 
            </summary>
<param name="refs">Список ObjectRef'ов</param>
<param name="tableName">имя таблицы</param>
<param name="connection">соединение с ИБ</param>
<param name="metadata">метаданные</param>
<returns>Список соответствий ссылок и их описаний типов</returns>
</member>
<member name="T:_1C.V8.Data.V8ConstHelper">
<summary>
            Объект для создания набора констант
            </summary>
</member>
<member name="M:_1C.V8.Data.V8ConstHelper.Create(_1C.V8.Data.V8DbConnection,_1C.V8.Data.V8TableInfo,_1C.V8.Data.V8DataParameterCollection)">
<summary>
            Создать новый объект
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="tableInfo">Информация о таблице создаваемого объекта</param>
<param name="parameters">Параметры для получения информации что создавать</param>
<returns>Созданный объект</returns>
</member>
<member name="T:_1C.V8.Data.V8InfoRegHelper">
<summary>
            Объект для создания набора записей регистра сведений
            </summary>
</member>
<member name="M:_1C.V8.Data.V8InfoRegHelper.Create(_1C.V8.Data.V8DbConnection,_1C.V8.Data.V8TableInfo,_1C.V8.Data.V8DataParameterCollection)">
<summary>
            Создать новый объект
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="tableInfo">Информация о таблице создаваемого объекта</param>
<param name="parameters">Параметры для получения информации что создавать</param>
<returns>Созданный объект</returns>
</member>
<member name="T:_1C.V8.Data.V8AccumRegHelper">
<summary>
            Объект для создания набора записей регистра накопления
            </summary>
</member>
<member name="M:_1C.V8.Data.V8AccumRegHelper.Create(_1C.V8.Data.V8DbConnection,_1C.V8.Data.V8TableInfo,_1C.V8.Data.V8DataParameterCollection)">
<summary>
            Создать новый объект
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="tableInfo">Информация о таблице создаваемого объекта</param>
<param name="parameters">Параметры для получения информации что создавать</param>
<returns>Созданный объект</returns>
</member>
<member name="T:_1C.V8.Data.V8BPMDProvider">
<summary>
            Предоставляет информацию о типах для бизнес-процессов и задач бизнес-процессов
            </summary>
</member>
<member name="M:_1C.V8.Data.V8BPMDProvider.CreateTypes(_1C.V8.Data.ComObject,System.String,System.Int32,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace)">
<summary>
            Генерация типов данных .NET по метаданным
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="IBAlias">Имя метаданныx</param>
<param name="builtInLang">Вариант встроенного языка</param>
<param name="compileUnit">Единица компиляции, в которой создаются типы</param>
<param name="codeNamespace">Namespace для размещения типов</param>
</member>
<member name="M:_1C.V8.Data.V8BPMDProvider.GetTypesInfo(_1C.V8.Data.ComObject,_1C.V8.Data.V8Metadata,System.Collections.Hashtable,_1C.V8.Data.ComObject[])">
<summary>
            Получить информацию о типах
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="metadata">Метаданные</param>
<param name="mdToType">Соответстсвие имени объекта метаданных типу ссылки</param>
<param name="connections">Соединения с ИБ для каждого языка</param>
</member>
<member name="M:_1C.V8.Data.V8BPMDProvider.GetTablesInfo(_1C.V8.Data.ComObject,_1C.V8.Data.V8Metadata,System.Collections.Hashtable,System.Collections.Hashtable,System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.ListDictionary,System.Collections.Specialized.NameValueCollection,_1C.V8.Data.ComObject[])">
<summary>
            Получить информацию о таблицах
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="metadata">Метаданные</param>
<param name="mdToType">Соответстсвие имени объекта метаданных типу ссылки</param>
<param name="mdToTable">Соответстсвие имени объекта метаданных типу таблицы</param>
<param name="actionsToRecorder">Соответствие движений регистратора имени объекта метаданных</param>
<param name="subTables">Соответствие подчиненных таблиц имени объекта метаданных</param>
<param name="inputOnBasis">Соответствие объектов ввода на основании имени объекта метаданных</param>
<param name="connections">Соединения с ИБ для каждого языка</param>
</member>
<member name="M:_1C.V8.Data.V8BPMDProvider.GetTaskAddrPropertiesFieldsInfo(_1C.V8.Data.ComObject,_1C.V8.Data.ComObject,_1C.V8.Data.V8FieldsCollection,_1C.V8.Data.ComObject,System.Boolean,_1C.V8.Data.V8Metadata,_1C.V8.Data.ComObject[],System.Object[])">
<summary>
            Описание реквизитов адресации
            </summary>
<param name="md">Объект "Метаданные"</param>
<param name="mdObject">Объект метаданных</param>
<param name="fieldsInfo">Информация о полях таблицы</param>
<param name="connection">Соединение с ИБ</param>
<param name="needUsage">Заполнять реквизит "Использование"</param>
<param name="metadata">Метаданные</param>
<param name="connections">Соединения с ИБ для каждого языка</param>
<param name="mdNames">Список методов метаданных, для получения этого объекта</param>
</member>
<member name="M:_1C.V8.Data.V8BPMDProvider.GetBPMainPresentationLength(_1C.V8.Data.ComObject,_1C.V8.Data.ComObject)">
<summary>
            Получение длины основного представления
            </summary>
<param name="enumMainPresentation">перечисление типов основного представления</param>
<param name="metadataObject">объект метаданных</param>
</member>
<member name="T:_1C.V8.Data.V8BPTaskHelper">
<summary>
            Объект для создания бизнес-задачи
            </summary>
</member>
<member name="M:_1C.V8.Data.V8BPTaskHelper.Create(_1C.V8.Data.V8DbConnection,_1C.V8.Data.V8TableInfo,_1C.V8.Data.V8DataParameterCollection)">
<summary>
            Создать новый объект
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="tableInfo">Информация о таблице создаваемого объекта</param>
<param name="parameters">Параметры для получения информации что создавать</param>
<returns>Созданный объект</returns>
</member>
<member name="M:_1C.V8.Data.V8BPTaskHelper.InitNewObject(_1C.V8.Data.ComObject)">
<summary>
            Проинициализировать новый объект
            </summary>
<param name="obj">Новый объект</param>
</member>
<member name="T:_1C.V8.Data.V8BPProcessHelper">
<summary>
            Объект для создания бизнес-прочесса
            </summary>
</member>
<member name="M:_1C.V8.Data.V8BPProcessHelper.Create(_1C.V8.Data.V8DbConnection,_1C.V8.Data.V8TableInfo,_1C.V8.Data.V8DataParameterCollection)">
<summary>
            Создать новый объект
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="tableInfo">Информация о таблице создаваемого объекта</param>
<param name="parameters">Параметры для получения информации что создавать</param>
<returns>Созданный объект</returns>
</member>
<member name="M:_1C.V8.Data.V8BPProcessHelper.InitNewObject(_1C.V8.Data.ComObject)">
<summary>
            Проинициализировать новый объект
            </summary>
<param name="obj">Новый объект</param>
</member>
<member name="T:_1C.V8.Data.V8CalcMDProvider">
<summary>
            Предоставляет информацию о типах и таблицах модуля "Расчет"
            </summary>
</member>
<member name="M:_1C.V8.Data.V8CalcMDProvider.CreateTypes(_1C.V8.Data.ComObject,System.String,System.Int32,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace)">
<summary>
            Генерация типов данных .NET по метаданным
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="IBAlias">Имя метаданныx</param>
<param name="builtInLang">Вариант встроенного языка</param>
<param name="compileUnit">Единица компиляции, в которой создаются типы</param>
<param name="codeNamespace">Namespace для размещения типов</param>
</member>
<member name="M:_1C.V8.Data.V8CalcMDProvider.GetTypesInfo(_1C.V8.Data.ComObject,_1C.V8.Data.V8Metadata,System.Collections.Hashtable,_1C.V8.Data.ComObject[])">
<summary>
            Получить информацию о типах
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="metadata">Метаданные</param>
<param name="mdToType">Соответстсвие имени объекта метаданных типу ссылки</param>
<param name="connections">Соединения с ИБ для каждого языка</param>
</member>
<member name="M:_1C.V8.Data.V8CalcMDProvider.GetTablesInfo(_1C.V8.Data.ComObject,_1C.V8.Data.V8Metadata,System.Collections.Hashtable,System.Collections.Hashtable,System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.ListDictionary,System.Collections.Specialized.NameValueCollection,_1C.V8.Data.ComObject[])">
<summary>
            Получить информацию о таблицах
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="metadata">Метаданные</param>
<param name="mdToType">Соответстсвие имени объекта метаданных типу ссылки</param>
<param name="mdToTable">Соответстсвие имени объекта метаданных типу таблицы</param>
<param name="actionsToRecorder">Соответствие движений регистратора имени объекта метаданных</param>
<param name="subTables">Соответствие подчиненных таблиц имени объекта метаданных</param>
<param name="inputOnBasis">Соответствие объектов ввода на основании имени объекта метаданных</param>
<param name="connections">Соединения с ИБ для каждого языка</param>
</member>
<member name="T:_1C.V8.Data.V8CalcKindHelper">
<summary>
            Объект для создания вида расчета
            </summary>
</member>
<member name="M:_1C.V8.Data.V8CalcKindHelper.Create(_1C.V8.Data.V8DbConnection,_1C.V8.Data.V8TableInfo,_1C.V8.Data.V8DataParameterCollection)">
<summary>
            Создать новый объект
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="tableInfo">Информация о таблице создаваемого объекта</param>
<param name="parameters">Параметры для получения информации что создавать</param>
<returns>Созданный объект</returns>
</member>
<member name="T:_1C.V8.Data.V8CalcRegisterHelper">
<summary>
            Объект для создания регистра расчетов
            </summary>
</member>
<member name="M:_1C.V8.Data.V8CalcRegisterHelper.Create(_1C.V8.Data.V8DbConnection,_1C.V8.Data.V8TableInfo,_1C.V8.Data.V8DataParameterCollection)">
<summary>
            Создать новый объект
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="tableInfo">Информация о таблице создаваемого объекта</param>
<param name="parameters">Параметры для получения информации что создавать</param>
<returns>Созданный объект</returns>
</member>
<member name="T:_1C.V8.Data.V8ConnectionStringForm">
<summary>
            Форма для задания строки соединения
            </summary>
</member>
<member name="F:_1C.V8.Data.V8ConnectionStringForm.components">
<summary>
            Required designer variable.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8ConnectionStringForm.#ctor">
<summary>
            Конструктор по умолчанию
            </summary>
</member>
<member name="M:_1C.V8.Data.V8ConnectionStringForm.Dispose(System.Boolean)">
<summary>
            Clean up any resources being used.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8ConnectionStringForm.InitializeComponent">
<summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8ConnectionStringForm.loadDataToControls">
<summary>
            Заполнение информацией списка строк соединений
            </summary>
</member>
<member name="P:_1C.V8.Data.V8ConnectionStringForm.ConnectionString">
<summary>
            Строка соединения
            </summary>
</member>
<member name="P:_1C.V8.Data.V8ConnectionStringForm.Version">
<summary>
            Версия 1С:Предприятия.
            </summary>
</member>
<member name="T:_1C.V8.Data.V8Consts">
<summary>
            Служебный класс - хранилище констант
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Consts.Database">
<summary>
            Имя параметра конфигурации в конфигурационном файле <b>web.config</b>, 
            содержащего путь к информационной базе.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Consts.UserName">
<summary>
            Имя параметра конфигурации в конфигурационном файле <b>web.config</b>, 
            содержащего имя пользователя информационной базы.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Consts.UserPassword">
<summary>
            Имя параметра конфигурации в конфигурационном файле <b>web.config</b>, 
            содержащего пароль пользователя информационной базы.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Consts.PoolCapacity">
<summary>
            Имя параметра конфигурации в конфигурационном файле <b>web.config</b>, 
            содержащего емкость пула COM-соединений с 1С:Предприятием.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Consts.PoolTimeout">
<summary>
            Имя параметра конфигурации в конфигурационном файле <b>web.config</b>, 
            содержащего время, в течение которго будет удерживаться в пуле COM-соединение.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Consts.MaxConnections">
<summary>
            Имя параметра конфигурации в конфигурационном файле <b>web.config</b>, 
            содержащего количество одновременно существующих объектов COM-соединение.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Consts.ComConnectorVersion">
<summary>
            Имя параметра конфигурации в конфигурационном файле <b>web.config</b>, 
            содержащего версию COM-соединения для работы с 1С:Предприятием.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Consts.V8ErrorMode">
<summary>
            Имя параметра конфигурации в конфигурационном файле <b>web.config</b>, 
            задающего режим отображения информации об ошибке.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Consts.V8ErrorPage">
<summary>
            Имя параметра конфигурации в конфигурационном файле <b>web.config</b>, 
            задающего URL страницы для отображения информации об ошибке.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Consts.DefaultSourceTableName">
<summary>
            Имя по умолчанию, используемое объектом <see cref="T:_1C.V8.Data.V8DataAdapter" /> для имени таблицы.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Consts.DataSetParameterName">
<summary>
            Имя параметра типа <see cref="T:_1C.V8.Data.V8DbParameter" /> команды <see cref="T:_1C.V8.Data.V8DbUpdateCommand" />, 
            используемого для передачи табличных частей.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Consts.kNullTypeString">
<summary>
            Имя типа "Null"
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Consts.kBooleanTypeString">
<summary>
            Имя типа "Булево"
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Consts.kNumericType">
<summary>
            Имя типа "Число"
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Consts.kStringTypeString">
<summary>
            Имя типа "Строка"
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Consts.kDateType">
<summary>
            Имя типа "Дата"
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Consts.kType">
<summary>
            Имя типа "Тип"
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Consts.kValueStorageTypeString">
<summary>
            Имя типа "ХранилищеЗначения"
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Consts.kTypeDescriptionType">
<summary>
            Имя типа "ОписанияТипов"
            </summary>
</member>
<member name="T:_1C.V8.Data.V8Action">
<summary>
            Описание действия над объектом
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Action.Name">
<summary>
            Имя действия
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Action.Update">
<summary>
            Действие является вариантом записи объекта.
            Определяется набором параметров метода записи
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Action.Method">
<summary>
            Метод действия, если оно не является вариантом записи
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Action.Default">
<summary>
            Является действием по умолчанию. Отрабатывает при
            нажатии кнопки ОК
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Action.Item">
<summary>
            Действие для формы элемента
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Action.List">
<summary>
            Действие для списка
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Action.PresentationKey">
<summary>
            Имя ключа в ресурсном файле для получения представления действия.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8Action.Presentation">
<summary>
            Представление действия
            </summary>
</member>
<member name="T:_1C.V8.Data.V8DataAdapter">
<summary>
            Представляет набор команд данных и подключений к базам данных,
            используемый для заполнения <see cref="T:System.Data.DataSet" /> и обновления источника данных.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DataAdapter.#ctor">
<summary>
            Создает новый экземпляр класса V8DataAdapter.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
<summary>
            Initializes a new instance of the System.Data.Common.RowUpdatedEventArgs class
            </summary>
<param name="dataRow">The System.Data.DataRow used to update the data source</param>
<param name="command">The System.Data.IDbCommand executed during the System.Data.IDataAdapter.Update(System.Data.DataSet)</param>
<param name="statementType">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement</param>
<param name="tableMapping">A System.Data.Common.DataTableMapping object</param>
<returns>A new instance of the System.Data.Common.RowUpdatedEventArgs class</returns>
</member>
<member name="M:_1C.V8.Data.V8DataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
<summary>
            Initializes a new instance of the System.Data.Common.RowUpdatingEventArgs class
            </summary>
<param name="dataRow">The System.Data.DataRow that updates the data source</param>
<param name="command">The System.Data.IDbCommand to execute during the System.Data.IDataAdapter.Update(System.Data.DataSet)</param>
<param name="statementType">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement</param>
<param name="tableMapping">A System.Data.Common.DataTableMapping object</param>
<returns>A new instance of the System.Data.Common.RowUpdatingEventArgs class</returns>
</member>
<member name="M:_1C.V8.Data.V8DataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
<summary>
            Вызывает событие RowUpdating.
            </summary>
<param name="value">RowUpdatingEventArgs, содержащий данные</param>
</member>
<member name="M:_1C.V8.Data.V8DataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
<summary>
            Вызывает событие RowUpdated.
            </summary>
<param name="value">RowUpdatedEventArgs, содержащий данные</param>
</member>
<member name="M:_1C.V8.Data.V8DataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
<summary>
             Вызывает INSERT, UPDATE, или DELETE команду 
             для каждой добавленной, измененной или удаленной строки в переданном массиве.
            </summary>
<param name="dataRows">Массив объектов DataRow, служащий для обновления данных</param>
<param name="tableMapping">Коллекция DataTableMapping</param>
<returns>Количество успешно обновленных строк</returns>
</member>
<member name="M:_1C.V8.Data.V8DataAdapter.Update(System.Data.DataSet,System.String)">
<summary>
             Вызывает INSERT, UPDATE, или DELETE команду 
             для каждой добавленной, измененной или удаленной строки в таблице,
             содержащейся в DataSet.
            </summary>
<param name="dataSet">DataSet, используемый для обновления данных</param>
<param name="srcTable">Имя таблицы в DataSet</param>
<returns>Количество успешно обновленных строк</returns>
</member>
<member name="M:_1C.V8.Data.V8DataAdapter.Update(System.Data.DataTable)">
<summary>
             Вызывает INSERT, UPDATE, или DELETE команду 
             для каждой добавленной, измененной или удаленной строки в таблице.
            </summary>
<param name="dataTable">Таблица, используемая для обновления данных</param>
<returns>Количество успешно обновленных строк</returns>
</member>
<member name="M:_1C.V8.Data.V8DataAdapter.Update(System.Data.DataSet)">
<summary>
             Вызывает INSERT, UPDATE, или DELETE команду 
             для каждой добавленной, измененной или удаленной строки в таблице.
            </summary>
<param name="dataSet">DataSet, используемый для обновления данных</param>
<returns>Количество успешно обновленных строк</returns>
</member>
<member name="M:_1C.V8.Data.V8DataAdapter.FillParents(System.Data.DataSet,System.String,System.Object)">
<summary>
            Заполняет таблицу записями родителей переданной записи.
            </summary>
<param name="dataSet">DataSet, в котором находится таблица</param>
<param name="srcTable">Имя заполняемой таблицы</param>
<param name="parentKey">Ключ записи</param>
<returns>Количество добавленных в таблицу записей</returns>
</member>
<member name="M:_1C.V8.Data.V8DataAdapter.FillParents(System.Data.DataSet,System.Object)">
<summary>
            Заполняет таблицу записями родителей переданной записи.
            </summary>
<param name="dataSet">DataSet, в котором находится таблица</param>
<param name="parentKey">Ключ записи</param>
<returns>Количество добавленных в таблицу записей</returns>
</member>
<member name="M:_1C.V8.Data.V8DataAdapter.FillParents(System.Data.DataTable,System.Object)">
<summary>
            Заполняет таблицу записями родителей переданной записи.
            </summary>
<param name="dataTable">Таблица, в которую помещаются записи</param>
<param name="parentKey">Ключ записи</param>
<returns>Количество добавленных в таблицу записей</returns>
</member>
<member name="M:_1C.V8.Data.V8DataAdapter.FillNext(System.Data.DataSet,System.String,System.Int32,System.Boolean,System.Object[])">
<summary>
            Заполняет таблицу записями, следующими после записи, заданной значениями ключей.
            </summary>
<param name="dataSet">DataSet, в котором находится таблица</param>
<param name="srcTable">Имя заполняемой таблицы</param>
<param name="numRecords">Максимальное количество возвращаемых записей</param>
<param name="includeCurrent">Включать ли переданную запись в результат</param>
<param name="keyFieldsValues">Ключи записи</param>
<returns>Количество добавленных в таблицу записей</returns>
</member>
<member name="M:_1C.V8.Data.V8DataAdapter.FillNext(System.Data.DataSet,System.Int32,System.Boolean,System.Object[])">
<summary>
            Заполняет таблицу записями, следующими после записи, заданной значениями ключей.
            </summary>
<param name="dataSet">DataSet, в котором находится таблица</param>
<param name="numRecords">Максимальное количество возвращаемых записей</param>
<param name="includeCurrent">Включать ли переданную запись в результат</param>
<param name="keyFieldsValues">Ключи записи</param>
<returns>Количество добавленных в таблицу записей</returns>
</member>
<member name="M:_1C.V8.Data.V8DataAdapter.FillNext(System.Data.DataTable,System.Int32,System.Boolean,System.Object[])">
<summary>
            Заполняет таблицу записями, следующими после записи, заданной значениями ключей.
            </summary>
<param name="dataTable">Таблица, в которую помещаются записи</param>
<param name="numRecords">Максимальное количество возвращаемых записей</param>
<param name="includeCurrent">Включать ли переданную запись в результат</param>
<param name="keyFieldsValues">Ключи записи</param>
<returns>Количество добавленных в таблицу записей</returns>
</member>
<member name="M:_1C.V8.Data.V8DataAdapter.FillPrev(System.Data.DataSet,System.String,System.Int32,System.Boolean,System.Object[])">
<summary>
            Заполняет таблицу записями, предшествующими переданной.
            </summary>
<param name="dataSet">DataSet, в котором находится таблица</param>
<param name="srcTable">Имя заполняемой таблицы</param>
<param name="numRecords">Максимальное количество возвращаемых записей</param>
<param name="includeCurrent">Включать ли переданную запись в результат</param>
<param name="keyFieldsValues">Ключи записи</param>
<returns>Количество добавленных в таблицу записей</returns>
</member>
<member name="M:_1C.V8.Data.V8DataAdapter.FillPrev(System.Data.DataSet,System.Int32,System.Boolean,System.Object[])">
<summary>
            Заполняет таблицу записями, предшествующими переданной.
            </summary>
<param name="dataSet">DataSet, в котором находится таблица</param>
<param name="numRecords">Максимальное количество возвращаемых записей</param>
<param name="includeCurrent">Включать ли переданную запись в результат</param>
<param name="keyFieldsValues">Ключи записи</param>
<returns>Количество добавленных в таблицу записей</returns>
</member>
<member name="M:_1C.V8.Data.V8DataAdapter.FillPrev(System.Data.DataTable,System.Int32,System.Boolean,System.Object[])">
<summary>
            Заполняет таблицу записями, предшествующими переданной.
            </summary>
<param name="dataTable">Таблица, в которую помещаются записи</param>
<param name="numRecords">Максимальное количество возвращаемых записей</param>
<param name="includeCurrent">Включать ли переданную запись в результат</param>
<param name="keyFieldsValues">Ключи записи</param>
<returns>Количество добавленных в таблицу записей</returns>
</member>
<member name="M:_1C.V8.Data.V8DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
<summary>
            Заполнить таблицу данными.
            </summary>
<param name="dataSet">DataSet, в котором находится таблица</param>
<param name="srcTable">Имя заполняемой таблицы</param>
<param name="dataReader">Объект IDataReader, из которого считываются данные</param>
<param name="startRecord">Номер записи, с которой начать чтение</param>
<param name="maxRecords">Максимальное количество читаемых записей</param>
<returns>Количество добавленных в таблицу записей</returns>
</member>
<member name="M:_1C.V8.Data.V8DataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
<summary>
            Заполнить таблицу данными.
            </summary>
<param name="dataSet">DataSet, в котором находится таблица</param>
<param name="startRecord">Номер записи, с которой начать чтение</param>
<param name="maxRecords">Максимальное количество читаемых записей</param>
<param name="srcTable">Имя заполняемой таблицы</param>
<param name="command">Объект IDbCommand, используемый для получения данных</param>
<param name="behavior">Вид выполняемого действия</param>
<returns>Количество добавленных в таблицу записей</returns>
</member>
<member name="M:_1C.V8.Data.V8DataAdapter.FillFirst(System.Data.DataSet,System.Int32,System.Int32,System.String)">
<summary>
            Заполняет таблицу записями от начала таблицы.
            </summary>
<param name="dataSet">DataSet, в котором находится таблица</param>
<param name="startRecord">Номер записи, с которой начать чтение</param>
<param name="maxRecords">Максимальное количество читаемых записей</param>
<param name="srcTable">Имя заполняемой таблицы</param>
<returns>Количество добавленных в таблицу записей</returns>
</member>
<member name="M:_1C.V8.Data.V8DataAdapter.FillFirst(System.Data.DataSet,System.Int32,System.Int32,System.String,_1C.V8.Data.V8DbSelectCommand,System.Data.CommandBehavior)">
<summary>
            Заполняет таблицу записями от начала таблицы.
            </summary>
<param name="dataSet">DataSet, в котором находится таблица</param>
<param name="startRecord">Номер записи, с которой начать чтение</param>
<param name="maxRecords">Максимальное количество читаемых записей</param>
<param name="srcTable">Имя заполняемой таблицы</param>
<param name="command">Объект IDbCommand, используемый для получения данных</param>
<param name="behavior">Вид выполняемого действия</param>
<returns>Количество добавленных в таблицу записей</returns>
</member>
<member name="M:_1C.V8.Data.V8DataAdapter.FillLast(System.Data.DataSet,System.Int32,System.Int32,System.String)">
<summary>
            Заполняет таблицу записями с конца таблицы
            </summary>
<param name="dataSet">DataSet, в котором находится таблица</param>
<param name="startRecord">Номер записи, с которой начать чтение</param>
<param name="maxRecords">Максимальное количество читаемых записей</param>
<param name="srcTable">Имя заполняемой таблицы</param>
<returns>Количество добавленных в таблицу записей</returns>
</member>
<member name="M:_1C.V8.Data.V8DataAdapter.FillLast(System.Data.DataSet,System.Int32,System.Int32,System.String,_1C.V8.Data.V8DbSelectCommand,System.Data.CommandBehavior)">
<summary>
            Заполняет таблицу записями с конца таблицы
            </summary>
<param name="dataSet">DataSet, в котором находится таблица</param>
<param name="startRecord">Номер записи, с которой начать чтение</param>
<param name="maxRecords">Максимальное количество читаемых записей</param>
<param name="srcTable">Имя заполняемой таблицы</param>
<param name="command">Объект IDbCommand, используемый для получения данных</param>
<param name="behavior">Вид выполняемого действия</param>
<returns>Количество добавленных в таблицу записей</returns>
</member>
<member name="P:_1C.V8.Data.V8DataAdapter.SelectCommand">
<summary>
            Возвращает или задает команду, используемую для выборки данных из базы данных.
            <seealso cref="T:_1C.V8.Data.V8DbSelectCommand" />
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DataAdapter.InsertCommand">
<summary>
            Возвращает или задает команду, используемую для добавления новых записей в базу данных
            <seealso cref="T:_1C.V8.Data.V8DbInsertCommand" />
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DataAdapter.UpdateCommand">
<summary>
            Возвращает или задает команду, используемую для обновления записей в базе данных
            <seealso cref="T:_1C.V8.Data.V8DbUpdateCommand" />
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DataAdapter.DeleteCommand">
<summary>
            Возвращает или задает команду, используемую для удаления записей в базе данных
            <seealso cref="T:_1C.V8.Data.V8DbDeleteCommand" />
            </summary>
</member>
<member name="E:_1C.V8.Data.V8DataAdapter.RowUpdating">
<summary>
            Вызывается функцией Update перед выполнением команды.
            </summary>
</member>
<member name="E:_1C.V8.Data.V8DataAdapter.RowUpdated">
<summary>
            Вызывается функцией Update после выполнения команды.
            </summary>
</member>
<member name="T:_1C.V8.Data.V8RowUpdatingEventHandler">
<summary>
            Делегат для события RowUpdating
            </summary>
</member>
<member name="T:_1C.V8.Data.V8RowUpdatedEventHandler">
<summary>
            Делегат для события RowUpdated
            </summary>
</member>
<member name="T:_1C.V8.Data.V8RowUpdatingEventArgs">
<summary>
            Аргументы события RowUpdating
            </summary>
</member>
<member name="M:_1C.V8.Data.V8RowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8RowUpdatingEventArgs" />
            </summary>
<param name="row">Строка с обновляемыми данными</param>
<param name="command">Выполняемая команда</param>
<param name="statementType">Тип выполняемого запроса</param>
<param name="tableMapping">Объект DataTableMapping</param>
</member>
<member name="P:_1C.V8.Data.V8RowUpdatingEventArgs.Command">
<summary>
            Возвращает или задает выполняемую команду
            </summary>
</member>
<member name="T:_1C.V8.Data.V8RowUpdatedEventArgs">
<summary>
            Аргументы события RowUpdated
            </summary>
</member>
<member name="M:_1C.V8.Data.V8RowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8RowUpdatedEventArgs" />
            </summary>
<param name="row">Строка с обновляемыми данными</param>
<param name="command">Выполняемая команда</param>
<param name="statementType">Тип выполняемого запроса</param>
<param name="tableMapping">Объект DataTableMapping</param>
</member>
<member name="P:_1C.V8.Data.V8RowUpdatedEventArgs.Command">
<summary>
            Возвращает или задает выполняемую команду
            </summary>
</member>
<member name="T:_1C.V8.Data.V8DRFieldInfo">
<summary>
            Описание поля выборки
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DRFieldInfo.Name">
<summary>
            Имя поля
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DRFieldInfo.TypeName">
<summary>
            Имя типа поля
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DRFieldInfo.TypeInfo">
<summary>
            Категория типа поля
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DRFieldInfo.IsCompound">
<summary>
            Составной ли тип
            </summary>
</member>
<member name="T:_1C.V8.Data.V8DataReader">
<summary>
            Предоставляет способ чтения однонаправленного потока строк данных из источника данных.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DataReader.#ctor(_1C.V8.Data.ComObject,_1C.V8.Data.V8DbConnection)">
<summary>
            Конструктор. Создает V8DataReader по результату запроса.
            </summary>
<param name="result">Результат запроса</param>
<param name="connection">Соединение с ИБ</param>
</member>
<member name="M:_1C.V8.Data.V8DataReader.Close">
<summary>
            Закрывает reader.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DataReader.NextResult">
<summary>
            Следующий результат в пакетных запросах. Не поддерживается.
            </summary>
<returns></returns>
</member>
<member name="M:_1C.V8.Data.V8DataReader.Read">
<summary>
            Переход к следующей записи.
            </summary>
<returns>Имеется ли следующая запись.</returns>
</member>
<member name="M:_1C.V8.Data.V8DataReader.Reset">
<summary>
            Сбросить выборку. 
            После вызова метода <see cref="M:_1C.V8.Data.V8DataReader.Read" /> выборка позиционируется на первую запись в ней.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DataReader.GetSchemaTable">
<summary>
            Возвращает информацию схемы.
            </summary>
<returns>Возвращает информацию схемы в виде DataTable</returns>
</member>
<member name="M:_1C.V8.Data.V8DataReader.GetName(System.Int32)">
<summary>
            Имя поля по его порядковому номеру.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Возвращает имя поля</returns>
</member>
<member name="M:_1C.V8.Data.V8DataReader.GetV8TypeName(System.Int32)">
<summary>
            Имя типа поля по его порядковому номеру.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Имя типа</returns>
</member>
<member name="M:_1C.V8.Data.V8DataReader.GetDataTypeName(System.Int32)">
<summary>
            Имя типа данных поля по его порядковому номеру.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Имя типа данных</returns>
</member>
<member name="M:_1C.V8.Data.V8DataReader.GetFieldType(System.Int32)">
<summary>
            Тип данных поля по его порядковому номеру.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Тип данных поля</returns>
</member>
<member name="M:_1C.V8.Data.V8DataReader.GetValue(System.Int32)">
<summary>
            Значение поля по его порядковому номеру.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Значение поля</returns>
</member>
<member name="M:_1C.V8.Data.V8DataReader.GetValues(System.Object[])">
<summary>
            Значение полей в текущей строке.
            </summary>
<param name="values">Массив, в котором возвращаются значения полей</param>
<returns>Число записей в массиве</returns>
</member>
<member name="M:_1C.V8.Data.V8DataReader.GetOrdinal(System.String)">
<summary>
            Порядковый номер поля по его имени.
            </summary>
<param name="fieldName">Имя поля</param>
<returns>Порядковый номер поля</returns>
</member>
<member name="M:_1C.V8.Data.V8DataReader.GetBoolean(System.Int32)">
<summary>
            Значение поля типа Boolean по его порядковому номеру.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Значение поля</returns>
</member>
<member name="M:_1C.V8.Data.V8DataReader.GetByte(System.Int32)">
<summary>
            Значение поля типа Byte по его порядковому номеру.
            Не поддерживается.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Значение поля</returns>
</member>
<member name="M:_1C.V8.Data.V8DataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
<summary>
            Значение поля типа массив байт по его порядковому номеру.
            Не поддерживается.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<param name="fieldOffset"></param>
<param name="buffer"></param>
<param name="bufferoffset"></param>
<param name="length"></param>
<returns></returns>
</member>
<member name="M:_1C.V8.Data.V8DataReader.GetChar(System.Int32)">
<summary>
            Значение поля типа Char по его порядковому номеру.
            Не поддерживается.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Значение поля</returns>
</member>
<member name="M:_1C.V8.Data.V8DataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
<summary>
            Значение поля типа массив символов по его порядковому номеру.
            Не поддерживается.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<param name="fieldOffset">Индекс внутри строки, с которого начинается чтение</param>
<param name="buffer">Буфер, в который читаются данные</param>
<param name="bufferoffset">Индекс внутри буфера</param>
<param name="length">Количество читаемых символов</param>
<returns>Количество прочитанных символов</returns>
</member>
<member name="M:_1C.V8.Data.V8DataReader.GetGuid(System.Int32)">
<summary>
            Значение поля типа GUID по его порядковому номеру.
            Не поддерживается.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Значение поля</returns>
</member>
<member name="M:_1C.V8.Data.V8DataReader.GetInt16(System.Int32)">
<summary>
            Значение поля типа Int16 по его порядковому номеру.
            Не поддерживается.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Значение поля</returns>
</member>
<member name="M:_1C.V8.Data.V8DataReader.GetInt32(System.Int32)">
<summary>
            Значение поля типа Int32 по его порядковому номеру.
            Не поддерживается.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Значение поля</returns>
</member>
<member name="M:_1C.V8.Data.V8DataReader.GetInt64(System.Int32)">
<summary>
            Значение поля типа Int64 по его порядковому номеру.
            Не поддерживается.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Значение поля</returns>
</member>
<member name="M:_1C.V8.Data.V8DataReader.GetFloat(System.Int32)">
<summary>
            Значение поля типа Float по его порядковому номеру.
            Не поддерживается.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Значение поля</returns>
</member>
<member name="M:_1C.V8.Data.V8DataReader.GetDouble(System.Int32)">
<summary>
            Значение поля типа Double по его порядковому номеру.
            Не поддерживается.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Значение поля</returns>
</member>
<member name="M:_1C.V8.Data.V8DataReader.GetString(System.Int32)">
<summary>
            Значение поля типа String по его порядковому номеру.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Значение поля</returns>
</member>
<member name="M:_1C.V8.Data.V8DataReader.GetDecimal(System.Int32)">
<summary>
            Значение поля типа Decimal по его порядковому номеру.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Значение поля</returns>
</member>
<member name="M:_1C.V8.Data.V8DataReader.GetDateTime(System.Int32)">
<summary>
            Значение поля типа DateTime по его порядковому номеру.
            Не поддерживается.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Значение поля</returns>
</member>
<member name="M:_1C.V8.Data.V8DataReader.GetData(System.Int32)">
<summary>
            Возвращает новый объект reader для указанного поля.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Новый объект reader</returns>
</member>
<member name="M:_1C.V8.Data.V8DataReader.IsDBNull(System.Int32)">
<summary>
            Содержит ли поле значение NULL.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Возвращает true если поле содержит значение NULL</returns>
</member>
<member name="P:_1C.V8.Data.V8DataReader.Depth">
<summary>
            Возвращает или задает степень вложенности. Не поддерживается.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DataReader.IsClosed">
<summary>
            Возвращает, закрыт ли reader.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DataReader.RecordsAffected">
<summary>
            Возвращает количество обработанных записей в пакетных запросах. Не поддерживается.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DataReader.FieldCount">
<summary>
            Возвращает число полей (колонок) в запросе.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DataReader.Item(System.Int32)">
<summary>
            Возвращает значение поля по его порядковому номеру.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DataReader.Item(System.String)">
<summary>
            Возвращает значение поля по его имени.
            </summary>
</member>
<member name="T:_1C.V8.Data.V8DataReaderWithOutTableParts">
<summary>
            Reader без табличных частей.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DataReaderWithOutTableParts.Close">
<summary>
            Закрывает reader.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DataReaderWithOutTableParts.IsClosed">
<summary>
            Закрыт ли reader.
            </summary>
</member>
<member name="T:_1C.V8.Data.V8DRFieldInfoCollection">
<summary>
            Коллекция для хранения информации о полях выборки.
            </summary>
</member>
<member name="T:_1C.V8.Data.V8DbCommand">
<summary>
            Базовый класс для команд, реализующих выборку, добавление
            изменение и удаление данных. 
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DbCommand.#ctor">
<summary>
            Конструктор по умолчанию
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DbCommand.Cancel">
<summary>
            Отменяет выполнение запроса
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DbCommand.CreateParameter">
<summary>
            Создает новый параметр команды.
            </summary>
<returns>Параметр</returns>
</member>
<member name="M:_1C.V8.Data.V8DbCommand.ExecuteNonQuery">
<summary>
            Выполняет запрос, не возвращающий записей.
            </summary>
<returns>Количество записей, обработанных запросом</returns>
</member>
<member name="M:_1C.V8.Data.V8DbCommand.ExecuteReader">
<summary>
            Выполняет запрос.
            </summary>
<returns>Reader для чтения результата запроса</returns>
</member>
<member name="M:_1C.V8.Data.V8DbCommand.ExecuteReader(System.Data.CommandBehavior)">
<summary>
            Выполняет запрос.
            </summary>
<returns>Reader для чтения результата запроса</returns>
</member>
<member name="M:_1C.V8.Data.V8DbCommand.ExecuteScalar">
<summary>
            Выполняет запрос и получает первое поле первой записи.
            </summary>
<returns>Значение первого поля первой записи</returns>
</member>
<member name="M:_1C.V8.Data.V8DbCommand.Prepare">
<summary>
            Подготовить запрос
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DbCommand.Clone">
<summary>
            Создает идентичную копию данного элемента.
            </summary>
<returns>Объект <see cref="T:_1C.V8.Data.V8DbCommand" />, создаваемый данным методом.</returns>
</member>
<member name="F:_1C.V8.Data.V8DbCommand.m_connection">
<summary>
            Соединение с ИБ
            </summary>
</member>
<member name="F:_1C.V8.Data.V8DbCommand.m_commandText">
<summary>
            Текст команды
            </summary>
</member>
<member name="F:_1C.V8.Data.V8DbCommand.m_commandTimeout">
<summary>
            Тайм-аут команды
            </summary>
</member>
<member name="F:_1C.V8.Data.V8DbCommand.m_commandType">
<summary>
            Тип команды
            </summary>
</member>
<member name="F:_1C.V8.Data.V8DbCommand.m_parameters">
<summary>
            Параметры команды
            </summary>
</member>
<member name="F:_1C.V8.Data.V8DbCommand.m_writeParameters">
<summary>
            Параметры для записи
            </summary>
</member>
<member name="F:_1C.V8.Data.V8DbCommand.m_transaction">
<summary>
            Транзакция
            </summary>
</member>
<member name="F:_1C.V8.Data.V8DbCommand.m_updatedRowSource">
<summary>
            Как результаты запроса влияют на RowSource
            </summary>
</member>
<member name="F:_1C.V8.Data.V8DbCommand.m_designTimeVisible">
<summary>
            Видимость в Property Grid
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbCommand.System#Data#IDbCommand#Connection">
<summary>
            Возвращает или задает соединение с ИБ.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbCommand.Connection">
<summary>
            Возвращает или задает соединение с ИБ
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbCommand.CommandText">
<summary>
            Возвращает или задает текст команды
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbCommand.CommandTimeout">
<summary>
            Возвращает или задает тайм-аут команды
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbCommand.CommandType">
<summary>
            Возвращает или задает способ интерпретации командной строки.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbCommand.System#Data#IDbCommand#Parameters">
<summary>
            Возвращает список параметров команды.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbCommand.Parameters">
<summary>
            Возвращает список параметров команды.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbCommand.System#Data#IDbCommand#Transaction">
<summary>
            Возвращает или задает транзакцию.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbCommand.Transaction">
<summary>
            Возвращает или задает транзакцию.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbCommand.UpdatedRowSource">
<summary>
            Возвращает или задает, как результаты запроса влияют на <see cref="T:System.Data.DataRow" />.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbCommand.DesignTimeVisible">
<summary>
            Возвращает или задает видимость в Property Grid.
            </summary>
</member>
<member name="T:_1C.V8.Data.V8DbSelectCommand">
<summary>
            Команда выборки данных из источника данных.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DbSelectCommand.ExecuteNonQuery">
<summary>
            Выполняет запрос, не возвращающий записей.
            </summary>
<returns>Количество записей, обработанных запросом</returns>
</member>
<member name="M:_1C.V8.Data.V8DbSelectCommand.ExecuteReader">
<summary>
            Выполняет запрос.
            </summary>
<returns>Reader для чтения результата запроса</returns>
</member>
<member name="M:_1C.V8.Data.V8DbSelectCommand.ExecuteReader(System.Data.CommandBehavior)">
<summary>
            Выполняет запрос.
            </summary>
<returns>Reader для чтения результата запроса</returns>
</member>
<member name="M:_1C.V8.Data.V8DbSelectCommand.ExecuteSelectNext(System.Int32,System.Boolean,System.Object[])">
<summary>
            Выполнить чтение записей следующих за переданной.
            </summary>
<param name="numRecords">Максимальное количество читаемых данных</param>
<param name="includeCurrent">Возвращать ли в результате запроса переданную запись</param>
<param name="keyFieldsValues">Значения ключевых полей записи</param>
<returns></returns>
</member>
<member name="P:_1C.V8.Data.V8DbSelectCommand.Fields">
<summary>
            Возвращает или задает список полей, возвращаемых запросом, если <see cref="T:System.Data.CommandType" />=<see cref="F:System.Data.CommandType.TableDirect" />.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbSelectCommand.WhereClause">
<summary>
            Возвращает или задает условие Where в запросе, если <see cref="T:System.Data.CommandType" />=<see cref="F:System.Data.CommandType.TableDirect" />.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbSelectCommand.ConditionClause">
<summary>
            Возвращает или задает условие для виртуальной таблицы.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbSelectCommand.OrderByClause">
<summary>
            Возвращает или задает предложение Order By в запросе, если <see cref="T:System.Data.CommandType" />=<see cref="F:System.Data.CommandType.TableDirect" />.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbSelectCommand.AllowedData">
<summary>
            Возвращает или задает режим извлечения только разрешенных данных, если <see cref="T:System.Data.CommandType" />=<see cref="F:System.Data.CommandType.TableDirect" />.
            </summary>
</member>
<member name="T:_1C.V8.Data.V8DbInsertCommand">
<summary>
            Команда добавления данных в источник данных.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DbInsertCommand.ExecuteNonQuery">
<summary>
            Выполняет запрос, не возвращающий записей
            </summary>
<returns>Количество записей, обработанных запросом</returns>
</member>
<member name="M:_1C.V8.Data.V8DbInsertCommand.ExecuteReader">
<summary>
            Выполняет запрос
            </summary>
<returns>Reader для чтения результата запроса</returns>
</member>
<member name="M:_1C.V8.Data.V8DbInsertCommand.ExecuteReader(System.Data.CommandBehavior)">
<summary>
            Выполняет запрос
            </summary>
<returns>Reader для чтения результата запроса</returns>
</member>
<member name="P:_1C.V8.Data.V8DbInsertCommand.WriteParameters">
<summary>
            Возвращает список параметров для записи.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbInsertCommand.Action">
<summary>
            Возвращает или задает действие, которое надо произвести над объектом.
            </summary>
</member>
<member name="T:_1C.V8.Data.V8DbUpdateCommand">
<summary>
            Команда обновления данных в источнике данных.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DbUpdateCommand.ExecuteNonQuery">
<summary>
            Выполняет запрос, не возвращающий записей.
            </summary>
<returns>Количество записей, обработанных запросом</returns>
</member>
<member name="M:_1C.V8.Data.V8DbUpdateCommand.ExecuteReader">
<summary>
            Выполняет запрос.
            </summary>
<returns>Reader для чтения результата запроса</returns>
</member>
<member name="M:_1C.V8.Data.V8DbUpdateCommand.ExecuteReader(System.Data.CommandBehavior)">
<summary>
            Выполняет запрос.
            </summary>
<returns>Reader для чтения результата запроса</returns>
</member>
<member name="P:_1C.V8.Data.V8DbUpdateCommand.WriteParameters">
<summary>
            Возвращает или задает список параметров записи.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbUpdateCommand.Action">
<summary>
            Возвращает или задает действие, которое надо произвести над объектом.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbUpdateCommand.UseObjectLock">
<summary>
            Возвращает или задает использование объектной блокировки 1С:Предприятия 8.1 при записи объекта.
            </summary>
</member>
<member name="T:_1C.V8.Data.V8DbDeleteCommand">
<summary>
            Команда для удаления данных из источника данных.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DbDeleteCommand.ExecuteNonQuery">
<summary>
            Выполняет запрос, не возвращающий записей.
            </summary>
<returns>Количество записей, обработанных запросом</returns>
</member>
<member name="M:_1C.V8.Data.V8DbDeleteCommand.ExecuteReader">
<summary>
            Выполняет запрос.
            </summary>
<returns>Reader для чтения результата запроса</returns>
</member>
<member name="M:_1C.V8.Data.V8DbDeleteCommand.ExecuteReader(System.Data.CommandBehavior)">
<summary>
            Выполняет запрос.
            </summary>
<returns>Reader для чтения результата запроса</returns>
</member>
<member name="T:_1C.V8.Data.ConditionClause">
<summary>
            Класс, представляющий элемент "условие" для виртуальных таблиц.
            </summary>
</member>
<member name="M:_1C.V8.Data.ConditionClause.#ctor">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.ConditionClause" />.
            </summary>
</member>
<member name="M:_1C.V8.Data.ConditionClause.#ctor(System.String,System.String)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.ConditionClause" />.
            </summary>
<param name="name">Имя условия</param>
<param name="condition">Строка условия</param>
</member>
<member name="M:_1C.V8.Data.ConditionClause.ToString">
<summary>
            Строковое представление.
            </summary>
<returns>Строковое представление</returns>
</member>
<member name="P:_1C.V8.Data.ConditionClause.Name">
<summary>
            Возвращает или задает имя параметра условия
            </summary>
</member>
<member name="P:_1C.V8.Data.ConditionClause.Condition">
<summary>
            Возвращает или задает строку условия
            </summary>
</member>
<member name="T:_1C.V8.Data.ConditionClauseCollection">
<summary>
            Коллекция объектов ConditionClause.
            </summary>
</member>
<member name="M:_1C.V8.Data.ConditionClauseCollection.#ctor">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.ConditionClauseCollection" />.
            </summary>
</member>
<member name="M:_1C.V8.Data.ConditionClauseCollection.IndexOf(System.String)">
<summary>
            Возвращает индекс позиции, в которой находится объект с искомым именем.
            </summary>
<param name="name">Имя условия</param>
<returns>Индекс позиции, в которой находится значение. 
            -1 - если такого значения нет в коллекции</returns>
</member>
<member name="M:_1C.V8.Data.ConditionClauseCollection.Remove(System.String)">
<summary>
            Удаляет значение из коллекции.
            </summary>
<param name="name">Имя условия</param>
</member>
<member name="M:_1C.V8.Data.ConditionClauseCollection.Contains(System.String)">
<summary>
            Определяет, содержится ли значение с заданным именем в коллекции.
            </summary>
<param name="name">Имя условия</param>
<returns>true если значение содержится в коллекции</returns>
</member>
<member name="M:_1C.V8.Data.ConditionClauseCollection.Add(System.String,System.String)">
<summary>
            Добавить значение в коллекцию.
            </summary>
<param name="name">Имя условия</param>
<param name="condition">Строка условия</param>
<returns>Добавленное значение</returns>
</member>
<member name="M:_1C.V8.Data.ConditionClauseCollection.Add(_1C.V8.Data.ConditionClause)">
<summary>
            Добавляет заданный объект <see cref="T:_1C.V8.Data.ConditionClause" /> в коллекцию.
            </summary>
<param name="value"><see cref="T:_1C.V8.Data.ConditionClause" />, который требуется добавить в коллекцию.</param>
<returns>Индекс, указывающий, куда был вставлен новый элемент.</returns>
</member>
<member name="M:_1C.V8.Data.ConditionClauseCollection.AddRange(_1C.V8.Data.ConditionClause[])">
<summary>
            Добавить список значений в коллекцию.
            </summary>
<param name="values">Список добавляемых значений</param>
</member>
<member name="P:_1C.V8.Data.ConditionClauseCollection.Item(System.String)">
<summary>
            Возвращает значение по имени условия.
            </summary>
</member>
<member name="T:_1C.V8.Data.SimpleDataReader">
<summary>
            Реализация IDataReader для чтения значений из объекта типа DataTable.
            </summary>
</member>
<member name="M:_1C.V8.Data.SimpleDataReader.Close">
<summary>
            Закрыть
            </summary>
</member>
<member name="M:_1C.V8.Data.SimpleDataReader.NextResult">
<summary>
            Перейти к следующему результату в пакетном запросе
            </summary>
<returns></returns>
</member>
<member name="M:_1C.V8.Data.SimpleDataReader.Read">
<summary>
            Переход к следующей записи
            </summary>
<returns>Имеется ли следующая запись</returns>
</member>
<member name="M:_1C.V8.Data.SimpleDataReader.GetSchemaTable">
<summary>
            Возвращает информацию схемы
            </summary>
<returns>Возвращает информацию схемы в виде DataTable</returns>
</member>
<member name="M:_1C.V8.Data.SimpleDataReader.GetName(System.Int32)">
<summary>
            Имя поля по его порядковому номеру
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Возвращает имя поля</returns>
</member>
<member name="M:_1C.V8.Data.SimpleDataReader.GetDataTypeName(System.Int32)">
<summary>
            Имя типа данных поля по его порядковому номеру
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Имя типа данных</returns>
</member>
<member name="M:_1C.V8.Data.SimpleDataReader.GetFieldType(System.Int32)">
<summary>
            Тип данных поля по его порядковому номеру
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Тип данных поля</returns>
</member>
<member name="M:_1C.V8.Data.SimpleDataReader.GetValue(System.Int32)">
<summary>
            Значение поля по его порядковому номеру
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Значение поля</returns>
</member>
<member name="M:_1C.V8.Data.SimpleDataReader.GetValues(System.Object[])">
<summary>
            Значение полей в текущей строке
            </summary>
<param name="values">Массив, в котором возвращаются значения полей</param>
<returns>Число записей в массиве</returns>
</member>
<member name="M:_1C.V8.Data.SimpleDataReader.GetOrdinal(System.String)">
<summary>
            Порядковый номер поля по его имени
            </summary>
<param name="fieldName">Имя поля</param>
<returns>Порядковый номер поля</returns>
</member>
<member name="M:_1C.V8.Data.SimpleDataReader.GetBoolean(System.Int32)">
<summary>
            Значение поля типа Boolean по его порядковому номеру
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Значение поля</returns>
</member>
<member name="M:_1C.V8.Data.SimpleDataReader.GetByte(System.Int32)">
<summary>
            Значение поля типа Byte по его порядковому номеру.
            Не поддерживается
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Значение поля</returns>
</member>
<member name="M:_1C.V8.Data.SimpleDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
<summary>
            Значение поля типа массив байт по его порядковому номеру
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<param name="fieldOffset">Индекс внутри строки, с которого начинается чтение</param>
<param name="buffer">Буфер, в который читаются данные</param>
<param name="bufferoffset">Индекс внутри буфера</param>
<param name="length">Количество читаемых символов</param>
<returns>Количество прочитанных символов</returns>
</member>
<member name="M:_1C.V8.Data.SimpleDataReader.GetChar(System.Int32)">
<summary>
            Значение поля типа Char по его порядковому номеру.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Значение поля</returns>
</member>
<member name="M:_1C.V8.Data.SimpleDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
<summary>
            Значение поля типа массив символов по его порядковому номеру
            Не поддерживается
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<param name="fieldOffset">Индекс внутри строки, с которого начинается чтение</param>
<param name="buffer">Буфер, в который читаются данные</param>
<param name="bufferoffset">Индекс внутри буфера</param>
<param name="length">Количество читаемых символов</param>
<returns>Количество прочитанных символов</returns>
</member>
<member name="M:_1C.V8.Data.SimpleDataReader.GetGuid(System.Int32)">
<summary>
            Значение поля типа GUID по его порядковому номеру.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Значение поля</returns>
</member>
<member name="M:_1C.V8.Data.SimpleDataReader.GetInt16(System.Int32)">
<summary>
            Значение поля типа Int16 по его порядковому номеру.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Значение поля</returns>
</member>
<member name="M:_1C.V8.Data.SimpleDataReader.GetInt32(System.Int32)">
<summary>
            Значение поля типа Int32 по его порядковому номеру.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Значение поля</returns>
</member>
<member name="M:_1C.V8.Data.SimpleDataReader.GetInt64(System.Int32)">
<summary>
            Значение поля типа Int64 по его порядковому номеру.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Значение поля</returns>
</member>
<member name="M:_1C.V8.Data.SimpleDataReader.GetFloat(System.Int32)">
<summary>
            Значение поля типа Float по его порядковому номеру.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Значение поля</returns>
</member>
<member name="M:_1C.V8.Data.SimpleDataReader.GetDouble(System.Int32)">
<summary>
            Значение поля типа Double по его порядковому номеру.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Значение поля</returns>
</member>
<member name="M:_1C.V8.Data.SimpleDataReader.GetString(System.Int32)">
<summary>
            Значение поля типа String по его порядковому номеру.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Значение поля</returns>
</member>
<member name="M:_1C.V8.Data.SimpleDataReader.GetDecimal(System.Int32)">
<summary>
            Значение поля типа Decimal по его порядковому номеру.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Значение поля</returns>
</member>
<member name="M:_1C.V8.Data.SimpleDataReader.GetDateTime(System.Int32)">
<summary>
            Значение поля типа DateTime по его порядковому номеру.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Значение поля</returns>
</member>
<member name="M:_1C.V8.Data.SimpleDataReader.GetData(System.Int32)">
<summary>
            Возвращает новый объект reader для указанного поля.
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Новый объект reader</returns>
</member>
<member name="M:_1C.V8.Data.SimpleDataReader.IsDBNull(System.Int32)">
<summary>
            Содержит ли поле значение NULL
            </summary>
<param name="fieldIndex">Порядковый номер поля</param>
<returns>Возвращает true если поле содержит значение NULL</returns>
</member>
<member name="P:_1C.V8.Data.SimpleDataReader.Depth">
<summary>
            Степень вложенности
            </summary>
</member>
<member name="P:_1C.V8.Data.SimpleDataReader.IsClosed">
<summary>
            Закрыт ли reader
            </summary>
</member>
<member name="P:_1C.V8.Data.SimpleDataReader.RecordsAffected">
<summary>
            Количество обработанных записей в пакетных запросах. Не поддерживается
            </summary>
</member>
<member name="P:_1C.V8.Data.SimpleDataReader.FieldCount">
<summary>
            Число полей (колонок) в запросе
            </summary>
</member>
<member name="P:_1C.V8.Data.SimpleDataReader.Item(System.Int32)">
<summary>
            Возвращает значение поля по его порядковому номеру
            </summary>
</member>
<member name="P:_1C.V8.Data.SimpleDataReader.Item(System.String)">
<summary>
            Возвращает значение поля по его имени
            </summary>
</member>
<member name="T:_1C.V8.Data.ComConnectorVersion">
<summary>
            Перечисление, задающее версию COM-соединения, используемого для работы с 1С:Предприятием.
            </summary>
</member>
<member name="F:_1C.V8.Data.ComConnectorVersion.Ver8_0">
<summary>
            Указывает использование соединения с 1С:Предприятием версии 8.0
            </summary>
</member>
<member name="F:_1C.V8.Data.ComConnectorVersion.Ver8_1">
<summary>
            Указывает использование соединения с 1С:Предприятием версии 8.1
            </summary>
</member>
<member name="F:_1C.V8.Data.ComConnectorVersion.Ver8_2">
<summary>
            Указывает использование соединения с 1С:Предприятием версии 8.2
            </summary>
</member>
<member name="F:_1C.V8.Data.ComConnectorVersion.Ver8_3">
<summary>
            Указывает использование соединения с 1С:Предприятием версии 8.3
            </summary>
</member>
<member name="T:_1C.V8.Data.V8DbConnection">
<summary>
            Представляет открытое подключение к источнику данных.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DbConnection.#ctor">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8DbConnection" />.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DbConnection.#ctor(System.String)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8DbConnection" />.
            </summary>
<param name="connectionString">Строка соединения к ИБ</param>
</member>
<member name="M:_1C.V8.Data.V8DbConnection.#ctor(System.String,System.String,System.String)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8DbConnection" />.
            </summary>
<param name="database">Имя ИБ</param>
<param name="user">Имя пользователя</param>
<param name="password">Пароль</param>
</member>
<member name="M:_1C.V8.Data.V8DbConnection.Finalize">
<summary>
            Деструктор.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DbConnection.BeginTransaction">
<summary>
            Создает транзакцию.
            </summary>
<returns>Возвращает объект-транзакция</returns>
</member>
<member name="M:_1C.V8.Data.V8DbConnection.BeginTransaction(System.Data.IsolationLevel)">
<summary>
            Создает транзакцию с заданным уровнем изоляции.
            </summary>
<param name="isolationLevel">Требуемый уровень изоляции</param>
<returns>Возвращает объект-транзакция</returns>
</member>
<member name="M:_1C.V8.Data.V8DbConnection.ChangeDatabase(System.String)">
<summary>
            Сменить ИБ.
            </summary>
<param name="databaseName">Имя новой ИБ</param>
</member>
<member name="M:_1C.V8.Data.V8DbConnection.CreateCommand">
<summary>
            Создает новую команду для этого соединения.
            </summary>
<returns>Возвращает команду</returns>
</member>
<member name="M:_1C.V8.Data.V8DbConnection.Open">
<summary>
            Открывает подключение к информационной базе с использованием параметров соединения, 
            заданных свойством <see cref="P:_1C.V8.Data.V8DbConnection.ConnectionString" />.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DbConnection.Close">
<summary>
            Закрывает соединение с информационной базой.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DbConnection.XMLTypeNameOfValue(System.Object)">
<summary>
            Возвращает имя XML типа по значению.
            </summary>
<param name="value">Значение</param>
<returns>Имя XML типа</returns>
</member>
<member name="M:_1C.V8.Data.V8DbConnection.Clone">
<summary>
            Создает идентичную копию данного элемента.
            </summary>
<returns>Объект <see cref="T:_1C.V8.Data.V8DbConnection" />, создаваемый данным методом.</returns>
</member>
<member name="M:_1C.V8.Data.V8DbConnection.ClearPool">
<summary>
            Очистить pool соединений
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DbConnection.Dispose(System.Boolean)">
<summary>
            Освободить занятые ресурсы
            </summary>
<param name="disposing">Освобождать ли занятые ресурсы</param>
</member>
<member name="P:_1C.V8.Data.V8DbConnection.Connection">
<summary>
            Возвращает COMConnection к 1С:Предприятию.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbConnection.ConnectionString">
<summary>
            Возвращает или задает строку соединения к ИБ.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbConnection.Database">
<summary>
            Возвращает или задает имя ИБ.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbConnection.User">
<summary>
            Возвращает или задает имя пользователя.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbConnection.Password">
<summary>
            Возвращает или задает пароль.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbConnection.ConnectionTimeout">
<summary>
            Возвращает тайм-аут обращения к ИБ.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbConnection.State">
<summary>
            Возвращает состояние соединения.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbConnection.IBAlias">
<summary>
            Возвращает или задает имя информационной базы.
            </summary>
</member>
<member name="E:_1C.V8.Data.V8DbConnection.StateChange">
<summary>
            Событие, возникающие при изменении состояния соединения.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbConnection.PoolCapacity">
<summary>
            Возвращает или задает емкость пула COM-соединений с 1С:Предприятием. 
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbConnection.PoolTimeout">
<summary>
            Возвращает или задает, как долго будет удерживаться в пуле COM-соединение. 
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbConnection.MaxConnections">
<summary>
            Возвращает или задает количество одновременно существующих объектов COM-соединение. 
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbConnection.Version">
<summary>
            Возвращает или задает версию COM-соединения для работы с 1С:Предприятием.
            </summary>
</member>
<member name="T:_1C.V8.Data.ConnectionStringBuilder">
<summary>
            Построитель строки соединения с ИБ, как это принято в 1С:Предприятии 8.
            </summary>
</member>
<member name="M:_1C.V8.Data.ConnectionStringBuilder.#ctor">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.ConnectionStringBuilder" />
            </summary>
</member>
<member name="M:_1C.V8.Data.ConnectionStringBuilder.#ctor(System.String)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.ConnectionStringBuilder" />
            </summary>
<param name="str">Строка соединения</param>
</member>
<member name="M:_1C.V8.Data.ConnectionStringBuilder.ToString">
<summary>
            Строковое представление
            </summary>
<returns>Строковое представление</returns>
</member>
<member name="P:_1C.V8.Data.ConnectionStringBuilder.Item(System.String)">
<summary>
            Возвращает или задает объект по указанному индексу.
            </summary>
</member>
<member name="T:_1C.V8.Data.V8DbParameter">
<summary>
            Класс - параметр команды
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DbParameter.#ctor">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8DbParameter" />
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DbParameter.#ctor(System.String)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8DbParameter" />
            </summary>
<param name="parameterName">Имя параметра</param>
</member>
<member name="M:_1C.V8.Data.V8DbParameter.#ctor(System.String,System.Object)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8DbParameter" />
            </summary>
<param name="parameterName">Имя параметра</param>
<param name="value">Значение параметра</param>
</member>
<member name="M:_1C.V8.Data.V8DbParameter.#ctor(System.String,System.Object,System.String)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8DbParameter" />
            </summary>
<param name="parameterName">Имя параметра</param>
<param name="value">Значение параметра</param>
<param name="sourceColumn">Имя поле в объекте DataSet</param>
</member>
<member name="M:_1C.V8.Data.V8DbParameter.#ctor(System.String,System.Data.DbType)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8DbParameter" />
            </summary>
<param name="parameterName">Имя параметра</param>
<param name="dbType">Тип данных параметра</param>
</member>
<member name="M:_1C.V8.Data.V8DbParameter.#ctor(System.String,System.Data.DbType,System.String)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8DbParameter" />
            </summary>
<param name="parameterName">Имя параметра</param>
<param name="dbType">Тип данных параметра</param>
<param name="sourceColumn">Имя поле в объекте DataSet</param>
</member>
<member name="M:_1C.V8.Data.V8DbParameter.#ctor(System.String,System.Object,System.String,System.Data.ParameterDirection)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8DbParameter" />
            </summary>
<param name="parameterName">Имя параметра</param>
<param name="value">Значение параметра</param>
<param name="sourceColumn">Имя поле в объекте DataSet</param>
<param name="direction">Тип параметра (in, out, inout)</param>
</member>
<member name="M:_1C.V8.Data.V8DbParameter.#ctor(System.String,System.Data.DbType,System.Data.ParameterDirection,System.Boolean,System.String,System.Data.DataRowVersion,System.Object)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8DbParameter" />
            </summary>
<param name="parameterName">Имя параметра</param>
<param name="dbType">Тип данных параметра</param>
<param name="direction">Тип параметра (in, out, inout)</param>
<param name="isNullable">Может ли быть NULL</param>
<param name="sourceColumn">Имя поле в объекте DataSet</param>
<param name="sourceVersion">Версия поля в объекте DataSet</param>
<param name="value">Значение параметра</param>
</member>
<member name="M:_1C.V8.Data.V8DbParameter.Clone">
<summary>
            Создает идентичную копию данного элемента.
            </summary>
<returns>Объект <see cref="T:_1C.V8.Data.V8DbParameter" />, создаваемый данным методом.</returns>
</member>
<member name="M:_1C.V8.Data.V8DbParameter.ToString">
<summary>
            Строковое представление
            </summary>
<returns>Строковое представление</returns>
</member>
<member name="P:_1C.V8.Data.V8DbParameter.DbType">
<summary>
            Тип данных БД параметра
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbParameter.Direction">
<summary>
             Тип параметра - параметр ввода, вывода, ввода/вывода, возвращаемый
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbParameter.IsNullable">
<summary>
            Может ли параметр принимать значение Null
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbParameter.ParameterName">
<summary>
            Имя параметра
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbParameter.SourceColumn">
<summary>
            Имя столбца в объекте DataSet, на который ссылается данный параметр
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbParameter.SourceVersion">
<summary>
            Версия столбца (текущая или оригинальная) в объекте DataSet,
            на который ссылается данный параметр
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbParameter.Value">
<summary>
            Значение параметра
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbParameter.Precision">
<summary>
            Точность параметра
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbParameter.Scale">
<summary>
            Числовая шкала параметра
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DbParameter.Size">
<summary>
            Размер параметра
            </summary>
</member>
<member name="T:_1C.V8.Data.V8DataParameterCollection">
<summary>
            Коллекция параметров
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DataParameterCollection.#ctor">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8DataParameterCollection" />
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DataParameterCollection.IndexOf(System.String)">
<summary>
            Определяет, содержится ли указанное значение в коллекции
            </summary>
<param name="parameterName">Имя искомого параметра</param>
<returns>true если значение содержится в коллекции</returns>
</member>
<member name="M:_1C.V8.Data.V8DataParameterCollection.RemoveAt(System.String)">
<summary>
            Удаляет значение из коллекции
            </summary>
<param name="parameterName">Имя параметра</param>
</member>
<member name="M:_1C.V8.Data.V8DataParameterCollection.Contains(System.String)">
<summary>
            Определяет, содержится ли значение с заданным именем в коллекции
            </summary>
<param name="parameterName">Имя параметра</param>
<returns>true если значение содержится в коллекции</returns>
</member>
<member name="M:_1C.V8.Data.V8DataParameterCollection.Add(System.String)">
<summary>
            Добавить значение в коллекцию
            </summary>
<param name="parameterName">Имя параметра</param>
<returns>Добавленное значение</returns>
</member>
<member name="M:_1C.V8.Data.V8DataParameterCollection.Add(System.String,System.Object)">
<summary>
            Добавить значение в коллекцию
            </summary>
<param name="parameterName">Имя параметра</param>
<param name="value">Значение параметра</param>
<returns>Добавленное значение</returns>
</member>
<member name="M:_1C.V8.Data.V8DataParameterCollection.Add(System.String,System.Object,System.String)">
<summary>
            Добавить значение в коллекцию
            </summary>
<param name="parameterName">Имя параметра</param>
<param name="value">Значение параметра</param>
<param name="sourceColumn">Имя столбца, на который ссылается данный параметр</param>
<returns>Добавленное значение</returns>
</member>
<member name="M:_1C.V8.Data.V8DataParameterCollection.Add(System.String,System.Object,System.String,System.Data.ParameterDirection)">
<summary>
            Добавить значение в коллекцию
            </summary>
<param name="parameterName">Имя параметра</param>
<param name="value">Значение параметра</param>
<param name="sourceColumn">Имя столбца, на который ссылается данный параметр</param>
<param name="direction">Тип параметра</param>
<returns>Добавленное значение</returns>
</member>
<member name="M:_1C.V8.Data.V8DataParameterCollection.Add(System.String,System.Data.DbType,System.Data.ParameterDirection,System.Boolean,System.String,System.Data.DataRowVersion,System.Object)">
<summary>
            Добавить значение в коллекцию
            </summary>
<param name="parameterName">Имя параметра</param>
<param name="dbType">Тип данных БД параметра</param>
<param name="direction">Тип параметра</param>
<param name="isNullable">Может ли параметр принимать значение Null</param>
<param name="sourceColumn">Имя столбца, на который ссылается данный параметр</param>
<param name="sourceVersion"></param>
<param name="value">Значение параметра</param>
<returns>Добавленное значение</returns>
</member>
<member name="M:_1C.V8.Data.V8DataParameterCollection.Add(_1C.V8.Data.V8DbParameter)">
<summary>
            Добавляет заданный объект <see cref="T:_1C.V8.Data.V8DbParameter" /> в коллекцию.
            </summary>
<param name="value"><see cref="T:_1C.V8.Data.V8DbParameter" />, который требуется добавить в коллекцию.</param>
<returns>Индекс, указывающий, куда был вставлен новый элемент.</returns>
</member>
<member name="M:_1C.V8.Data.V8DataParameterCollection.AddRange(_1C.V8.Data.V8DbParameter[])">
<summary>
            Добавить список значений в коллекцию
            </summary>
<param name="values">Список добавляемых значений</param>
</member>
<member name="P:_1C.V8.Data.V8DataParameterCollection.Item(System.String)">
<summary>
            Возвращает значение по имени параметра
            </summary>
</member>
<member name="F:_1C.V8.Data.V8DesignCommandForm.components">
<summary>
            Required designer variable.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DesignCommandForm.Dispose(System.Boolean)">
<summary>
            Clean up any resources being used.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DesignCommandForm.InitializeComponent">
<summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
</member>
<member name="T:_1C.V8.Data.V8DesignFieldsForm">
<summary>
            Форма для формирования списка полей.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DesignFieldsForm.#ctor">
<summary>
            Форма для формирования списка полей
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DesignFieldsForm.Dispose(System.Boolean)">
<summary>
            Clean up any resources being used.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DesignFieldsForm.InitializeComponent">
<summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DesignFieldsForm.InitFieldsInfo(_1C.V8.Data.V8Metadata,_1C.V8.Data.V8TableInfo,System.Boolean,System.Boolean,System.String)">
<summary>
            Инициализация формы 
            </summary>
<param name="metadata">Метаданные</param>
<param name="tableInfo">Таблица</param>
<param name="needPresentation">Включать ли в список представления значений полей</param>
<param name="needTabularParts">Включать ли в список табличные части</param>
<param name="selectedFieldsStr">Строка, содержащая список выбранных полей</param>
</member>
<member name="M:_1C.V8.Data.V8DesignFieldsForm.InitFieldsInfo(_1C.V8.Data.V8FieldsCollection,System.String)">
<summary>
            Инициализация формы 
            </summary>
<param name="keyFields">Список полей</param>
<param name="selectedFieldsStr">Строка, содержащая список выбранных полей</param>
</member>
<member name="M:_1C.V8.Data.V8DesignFieldsForm.GetValue">
<summary>
            Возвращает список выбранных полей в виде строки
            </summary>
<returns>Строка, содержащая список выбранных полей</returns>
</member>
<member name="T:_1C.V8.Data.V8DesignOrderForm">
<summary>
            Форма редактирования состава полей для группировки
            </summary>
</member>
<member name="F:_1C.V8.Data.V8DesignOrderForm.components">
<summary>
            Required designer variable.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DesignOrderForm.Dispose(System.Boolean)">
<summary>
            Clean up any resources being used.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DesignOrderForm.InitializeComponent">
<summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8DesignOrderForm.m_orderFieldsCollection">
<summary>
            коллекция полей для группировок
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DesignOrderForm.button_up_order_field_Click(System.Object,System.EventArgs)">
<summary>
            Реакция на нажитие кнопки повышения уровня поля
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DesignOrderForm.button_down_order_field_Click(System.Object,System.EventArgs)">
<summary>
            Реакция на нажитие кнопки понижения уровня поля
            </summary>
</member>
<member name="T:_1C.V8.Data.V8DesignOrderForm.V8OrderFieldInfo">
<summary>
            Поле таблицы с признаком того, выбрано поле или нет
            </summary>
</member>
<member name="F:_1C.V8.Data.V8DesignOrderForm.V8OrderFieldInfo.m_nOrderLevel">
<summary>
            Уровень поля внутри группировки
            </summary>
</member>
<member name="F:_1C.V8.Data.V8DesignOrderForm.V8OrderFieldInfo.m_bReverseOrder">
<summary>
            Признак сортировки по убыванию
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DesignOrderForm.V8OrderFieldInfo.OrderLevel">
<summary>
            Уровень поля внутри группировки
            </summary>
</member>
<member name="P:_1C.V8.Data.V8DesignOrderForm.V8OrderFieldInfo.ReverseOrder">
<summary>
            Признак сортировки по убыванию
            </summary>
</member>
<member name="M:_1C.V8.Data.V8DesignOrderForm.V8OrderFieldInfoCollection.Add(_1C.V8.Data.V8DesignOrderForm.V8OrderFieldInfo)">
<summary>
            Добавляет заданный объект <see cref="T:_1C.V8.Data.V8DesignOrderForm.V8OrderFieldInfo" /> в коллекцию.
            </summary>
<param name="value"><see cref="T:_1C.V8.Data.V8DesignOrderForm.V8OrderFieldInfo" />, который требуется добавить в коллекцию.</param>
<returns>Индекс, указывающий, куда был вставлен новый элемент.</returns>
</member>
<member name="M:_1C.V8.Data.V8DesignOrderForm.V8OrderFieldInfoCollection.IndexOf(_1C.V8.Data.V8DesignOrderForm.V8OrderFieldInfo)">
<summary>
            Возвращает индекс позиции, в которой находится искомое значение
            </summary>
<param name="value">Искомое значение</param>
<returns>Индекс позиции, в которой находится значение. 
            -1 - если такого значения нет в коллекции</returns>
</member>
<member name="M:_1C.V8.Data.V8DesignOrderForm.V8OrderFieldInfoCollection.Remove(_1C.V8.Data.V8DesignOrderForm.V8OrderFieldInfo)">
<summary>
            Удаляет значение из коллекции
            </summary>
<param name="value">Удаляемое значение</param>
</member>
<member name="M:_1C.V8.Data.V8DesignOrderForm.V8OrderFieldInfoCollection.Contains(_1C.V8.Data.V8DesignOrderForm.V8OrderFieldInfo)">
<summary>
            Определяет, содержится ли указанное значение в коллекции
            </summary>
<param name="value">Искомое значение</param>
<returns>true если значение содержится в коллекции</returns>
</member>
<member name="P:_1C.V8.Data.V8DesignOrderForm.V8OrderFieldInfoCollection.Item(System.String)">
<summary>
            Возвращает значение по имени
            </summary>
</member>
<member name="T:_1C.V8.Data.V8QueryTextEditor">
<summary>
            Редактор текста запроса.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8QueryTextEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
<summary>
            Возвращает стиль редактора
            </summary>
<param name="context">Объект для получения дополнительной информации  о контексте</param>
<returns>Стиль редактора</returns>
</member>
<member name="M:_1C.V8.Data.V8QueryTextEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
<summary>
            Редактирование значения
            </summary>
<param name="context">Объект для получения дополнительной информации  о контексте</param>
<param name="provider">Провайдер для получения сервисов</param>
<param name="value">Редактируемое значение</param>
<returns>Новое значение</returns>
</member>
<member name="T:_1C.V8.Data.V8ConnectionStringUITypeEditor">
<summary>
            Редактор для построения строки соединения с ИБ
            </summary>
</member>
<member name="M:_1C.V8.Data.V8ConnectionStringUITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
<summary>
            Возвращает стиль редактора
            </summary>
<param name="context">Объект для получения дополнительной информации  о контексте</param>
<returns>Стиль редактора</returns>
</member>
<member name="M:_1C.V8.Data.V8ConnectionStringUITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
<summary>
            Редактирование значения
            </summary>
<param name="context">Объект для получения дополнительной информации  о контексте</param>
<param name="provider">Провайдер для получения сервисов</param>
<param name="value">Редактируемое значение</param>
<returns>Новое значение</returns>
</member>
<member name="T:_1C.V8.Data.V8FieldsUITypeEditor">
<summary>
            Редактор списка полей
            </summary>
</member>
<member name="M:_1C.V8.Data.V8FieldsUITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
<summary>
            Возвращает стиль редактора
            </summary>
<param name="context">Объект для получения дополнительной информации  о контексте</param>
<returns>Стиль редактора</returns>
</member>
<member name="M:_1C.V8.Data.V8FieldsUITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
<summary>
            Редактирование значения
            </summary>
<param name="context">Объект для получения дополнительной информации  о контексте</param>
<param name="provider">Провайдер для получения сервисов</param>
<param name="value">Редактируемое значение</param>
<returns>Новое значение</returns>
</member>
<member name="T:_1C.V8.Data.V8OrderUITypeEditor">
<summary>
            Редактор строки упорядочивания
            </summary>
</member>
<member name="M:_1C.V8.Data.V8OrderUITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
<summary>
            Возвращает стиль редактора
            </summary>
<param name="context">Объект для получения дополнительной информации  о контексте</param>
<returns>Стиль редактора</returns>
</member>
<member name="M:_1C.V8.Data.V8OrderUITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
<summary>
            Редактирование значения
            </summary>
<param name="context">Объект для получения дополнительной информации о контексте</param>
<param name="provider">Провайдер для получения сервисов</param>
<param name="value">Редактируемое значение</param>
<returns>Новое значение</returns>
</member>
<member name="T:_1C.V8.Data.V8CommandTextConverter">
<summary>
            Конвертер - имя таблицы для V8DbConnection
            </summary>
</member>
<member name="M:_1C.V8.Data.V8CommandTextConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
<summary>
            Возвращает коллекцию значений
            </summary>
<param name="context">Объект для получения дополнительной информации о контексте</param>
<returns>Коллекция значений</returns>
</member>
<member name="M:_1C.V8.Data.V8CommandTextConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
<summary>
            Признак, что значение берется только из списка значений
            Пользователь не может ввести значени отличное от тех, что есть в списке
            </summary>
<param name="context">Объект для получения дополнительной информации о контексте</param>
<returns>true - если список значений, возвращаемый функцией <see cref="M:_1C.V8.Data.V8CommandTextConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> - 
            полный список возможных значений</returns>
</member>
<member name="M:_1C.V8.Data.V8CommandTextConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
<summary>
            Поддерживает ли объект стандартный список значений выбираемый из списка
            </summary>
<param name="context">Объект для получения дополнительной информации о контексте</param>
<returns>true - если функция <see cref="M:_1C.V8.Data.V8CommandTextConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> должна быть вызвына
            для получения значений</returns>
</member>
<member name="T:_1C.V8.Data.AttributeUse">
<summary>
            Использование реквизита.
            </summary>
</member>
<member name="F:_1C.V8.Data.AttributeUse.ForItem">
<summary>
            Использование реквизита для элемента.
            </summary>
</member>
<member name="F:_1C.V8.Data.AttributeUse.ForFolder">
<summary>
            Использование реквизита для группы.
            </summary>
</member>
<member name="F:_1C.V8.Data.AttributeUse.ForFoldersAndItem">
<summary>
            Использование реквизита для группы и элемента.
            </summary>
</member>
<member name="T:_1C.V8.Data.V8FieldInfo">
<summary>
            Описание поля таблицы.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8FieldInfo.#ctor">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8FieldInfo" />.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8FieldInfo.#ctor(System.String,_1C.V8.Data.TypeDescription)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8FieldInfo" />.
            </summary>
<param name="name">Имя поля</param>
<param name="typeDomain">Тип поля</param>
</member>
<member name="M:_1C.V8.Data.V8FieldInfo.#ctor(System.String,_1C.V8.Data.TypeDescription,System.Boolean)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8FieldInfo" />.
            </summary>
<param name="name">Имя поля</param>
<param name="typeDomain">Тип поля</param>
<param name="readOnly">Только для чтения</param>
</member>
<member name="M:_1C.V8.Data.V8FieldInfo.#ctor(System.String,_1C.V8.Data.TypeDescription,_1C.V8.Data.AttributeUse)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8FieldInfo" />.
            </summary>
<param name="name">Имя поля</param>
<param name="typeDomain">Тип поля</param>
<param name="usage">Использование реквизита</param>
</member>
<member name="M:_1C.V8.Data.V8FieldInfo.#ctor(System.String,_1C.V8.Data.TypeDescription,System.Boolean,_1C.V8.Data.AttributeUse,_1C.V8.Data.TypeDescription)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8FieldInfo" />.
            </summary>
<param name="name">Имя поля</param>
<param name="typeDomain">Тип поля</param>
<param name="readOnly">Только для чтения</param>
<param name="usage">Использование реквизита</param>
<param name="availableTypes">Доступные типы</param>
</member>
<member name="M:_1C.V8.Data.V8FieldInfo.#ctor(_1C.V8.Data.V8FieldInfo)">
<summary>
            Конструктор копирования.
            </summary>
<param name="fi">Описание поля, из которого копируются значения</param>
</member>
<member name="M:_1C.V8.Data.V8FieldInfo.FromMDObject(_1C.V8.Data.ComObject,_1C.V8.Data.ComObject,_1C.V8.Data.ComObject,System.Boolean,_1C.V8.Data.V8Metadata)">
<summary>
            Создание поля из объекта метаданных.
            </summary>
<param name="md">Объект "Метаданные"</param>
<param name="mdObject">Объект метаданных</param>
<param name="connection">Соединение с ИБ</param>
<param name="needUsage">Надо ли заполнять поле "Использование"</param>
<param name="metadata">Метаданные</param>
<returns></returns>
</member>
<member name="M:_1C.V8.Data.V8FieldInfo.FromMDObject(_1C.V8.Data.ComObject,_1C.V8.Data.ComObject,_1C.V8.Data.ComObject,System.Boolean,System.String,_1C.V8.Data.V8Metadata)">
<summary>
            Создание поля из объекта метаданных.
            </summary>
<param name="md">Объект "Метаданные"</param>
<param name="mdObject">Объект метаданных</param>
<param name="connection">Соединение с ИБ</param>
<param name="needUsage">Надо ли заполнять поле "Использование"</param>
<param name="suffix">Суффикс имени поля</param>
<param name="metadata">Метаданные</param>
<returns></returns>
</member>
<member name="M:_1C.V8.Data.V8FieldInfo.GetPresentation(System.String)">
<summary>
            Возвращает представление поля для заданного языка.
            </summary>
<param name="lang">Код языка, для которого необходимо получить представление</param>
<returns>Представление поля</returns>
</member>
<member name="P:_1C.V8.Data.V8FieldInfo.Name">
<summary>
            Имя поля.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8FieldInfo.TypeDomain">
<summary>
            Тип поля (домен).
            <seealso cref="T:_1C.V8.Data.TypeDescription" />
            </summary>
</member>
<member name="P:_1C.V8.Data.V8FieldInfo.ReadOnly">
<summary>
            Поле только для чтения.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8FieldInfo.Presentation">
<summary>
            Представление поля.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8FieldInfo.PresentationLength">
<summary>
            Длина представления значения поля.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8FieldInfo.Usage">
<summary>
            Признак использования реквизита для элемента, группы или для обоих.
            Имеет смысл только для полей таблиц, поддерживающих иерархию групп 
            и элементов.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8FieldInfo.AvailableTypes">
<summary>
            Доступные типы для полей типа <see cref="P:_1C.V8.Data.V8FieldInfo.TypeDomain" />.
            Данные типы могут использоваться в описании типа, 
            которое присваивается в качестве значения данному полю.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8FieldInfo.Master">
<summary>
            Признак, что данное поле является ведущим.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8FieldInfo.ReferenceExist">
<summary>
            Определяет, содержит ли <see cref="P:_1C.V8.Data.V8FieldInfo.TypeDomain" /> этого поля ссылочный тип.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8FieldInfo.EnumRefExist">
<summary>
            Определяет, содержит ли <see cref="P:_1C.V8.Data.V8FieldInfo.TypeDomain" /> этого поля ссылочный тип,
            поведение которого как у перечисления.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8FieldInfo.EnumExist">
<summary>
            Определяет, содержит ли <see cref="P:_1C.V8.Data.V8FieldInfo.TypeDomain" /> этого поля тип-перечисление
            </summary>
</member>
<member name="P:_1C.V8.Data.V8FieldInfo.BoolExist">
<summary>
            Определяет, содержит ли <see cref="P:_1C.V8.Data.V8FieldInfo.TypeDomain" /> этого поля булевский тип.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8FieldInfo.DateExist">
<summary>
            Определяет, содержит ли <see cref="P:_1C.V8.Data.V8FieldInfo.TypeDomain" /> этого поля тип дата
            с квалификатором, отличным от <see cref="F:_1C.V8.Data.DateFractions.Time" />.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8FieldInfo.TypeDescriptionExist">
<summary>
            Определяет, содержит ли <see cref="P:_1C.V8.Data.V8FieldInfo.TypeDomain" /> этого поля тип - описание типа
            </summary>
</member>
<member name="T:_1C.V8.Data.AccountingRegisterRecordPart">
<summary>
            Перечисление видов корреспонденций проводки.
            </summary>
</member>
<member name="F:_1C.V8.Data.AccountingRegisterRecordPart.Main">
<summary>
            Главная корреспонденция проводки.
            </summary>
</member>
<member name="F:_1C.V8.Data.AccountingRegisterRecordPart.Debit">
<summary>
            Дебетовая корреспонденция.
            </summary>
</member>
<member name="F:_1C.V8.Data.AccountingRegisterRecordPart.Credit">
<summary>
            Кредитовая корреспонденция.
            </summary>
</member>
<member name="T:_1C.V8.Data.ExtDimFieldType">
<summary>
            Вид поля описывающего субконто.
            </summary>
</member>
<member name="F:_1C.V8.Data.ExtDimFieldType.Kind">
<summary>
            Вид субконто.
            </summary>
</member>
<member name="F:_1C.V8.Data.ExtDimFieldType.Value">
<summary>
            Значение субконто.
            </summary>
</member>
<member name="T:_1C.V8.Data.V8ExtDimFieldInfo">
<summary>
            Описание поля являющегося либо видом субконто, либо значением субконто.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8ExtDimFieldInfo.#ctor">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8ExtDimFieldInfo" />.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8ExtDimFieldInfo.#ctor(System.String,_1C.V8.Data.TypeDescription,System.Boolean,_1C.V8.Data.AccountingRegisterRecordPart,_1C.V8.Data.ExtDimFieldType,System.Int32)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8ExtDimFieldInfo" />.
            </summary>
<param name="name">Имя поля</param>
<param name="typeDomain">Тип поля</param>
<param name="readOnly">Только для чтения</param>
<param name="recordPart">К какой части проводки относится</param>
<param name="fieldType">Вид или значение</param>
<param name="index">Номер поля</param>
</member>
<member name="P:_1C.V8.Data.V8ExtDimFieldInfo.RecordPart">
<summary>
            Корреспонденция проводки, к которой относится данное поле.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8ExtDimFieldInfo.FieldType">
<summary>
            Вид поля.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8ExtDimFieldInfo.Index">
<summary>
            Номер субконто, к которому относится данное поле.
            </summary>
</member>
<member name="T:_1C.V8.Data.V8FieldsCollection">
<summary>
            Коллекция полей.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8FieldsCollection.Add(_1C.V8.Data.V8FieldInfo)">
<summary>
            Добавляет заданный объект <see cref="T:_1C.V8.Data.V8FieldInfo" /> в коллекцию.
            </summary>
<param name="value"><see cref="T:_1C.V8.Data.V8FieldInfo" />, который требуется добавить в коллекцию.</param>
<returns>Индекс, указывающий, куда был вставлен новый элемент.</returns>
</member>
<member name="M:_1C.V8.Data.V8FieldsCollection.IndexOf(_1C.V8.Data.V8FieldInfo)">
<summary>
            Возвращает индекс позиции, в которой находится искомое значение.
            </summary>
<param name="value">Искомое значение</param>
<returns>Индекс позиции, в которой находится значение. 
            -1 - если такого значения нет в коллекции</returns>
</member>
<member name="M:_1C.V8.Data.V8FieldsCollection.Insert(System.Int32,_1C.V8.Data.V8FieldInfo)">
<summary>
            Вставляет значение в коллекцию в заданную позицию.
            </summary>
<param name="index">Индекс позиции, в которую вставляется значение</param>
<param name="value">Значение</param>
</member>
<member name="M:_1C.V8.Data.V8FieldsCollection.Remove(_1C.V8.Data.V8FieldInfo)">
<summary>
            Удаляет значение из коллекции.
            </summary>
<param name="value">Удаляемое значение</param>
</member>
<member name="M:_1C.V8.Data.V8FieldsCollection.Contains(_1C.V8.Data.V8FieldInfo)">
<summary>
            Определяет, содержится ли указанное значение в коллекции.
            </summary>
<param name="value">Искомое значение</param>
<returns>true если значение содержится в коллекции</returns>
</member>
<member name="P:_1C.V8.Data.V8FieldsCollection.Item(System.Int32)">
<summary>
            Возвращает значение по его индексу в коллекции.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8FieldsCollection.Item(System.String)">
<summary>
            Возвращает значение по имени поля.
            </summary>
</member>
<member name="T:_1C.V8.Data.V8FilterCondition">
<summary>
            Условия сравнения
            </summary>
</member>
<member name="F:_1C.V8.Data.V8FilterCondition.Equal">
<summary>
            Равно
            </summary>
</member>
<member name="F:_1C.V8.Data.V8FilterCondition.NotEqual">
<summary>
            Не равно
            </summary>
</member>
<member name="F:_1C.V8.Data.V8FilterCondition.Less">
<summary>
            Меньше
            </summary>
</member>
<member name="F:_1C.V8.Data.V8FilterCondition.LessEqual">
<summary>
            Меньше или равно
            </summary>
</member>
<member name="F:_1C.V8.Data.V8FilterCondition.Great">
<summary>
            Больше
            </summary>
</member>
<member name="F:_1C.V8.Data.V8FilterCondition.GreatEqual">
<summary>
            Больше или равно
            </summary>
</member>
<member name="F:_1C.V8.Data.V8FilterCondition.IntervalGreatLess">
<summary>
            Интервал (&gt;, &lt;)
            </summary>
</member>
<member name="F:_1C.V8.Data.V8FilterCondition.IntervalGreatEqLessEq">
<summary>
            Интервал (&gt;=, &lt;=)
            </summary>
</member>
<member name="F:_1C.V8.Data.V8FilterCondition.IntervalGreatEqLess">
<summary>
            Интервал (&gt;=, &lt;)
            </summary>
</member>
<member name="F:_1C.V8.Data.V8FilterCondition.IntervalGreatLessEq">
<summary>
            Интервал (&gt;, &lt;=)
            </summary>
</member>
<member name="F:_1C.V8.Data.V8FilterCondition.Contains">
<summary>
            Содержит
            </summary>
</member>
<member name="F:_1C.V8.Data.V8FilterCondition.NotContains">
<summary>
            Не содержит
            </summary>
</member>
<member name="F:_1C.V8.Data.V8FilterCondition.InList">
<summary>
            В списке
            </summary>
</member>
<member name="F:_1C.V8.Data.V8FilterCondition.NotInList">
<summary>
            Не в списке
            </summary>
</member>
<member name="F:_1C.V8.Data.V8FilterCondition.InGroup">
<summary>
            Проверка на вхождение значения в группу.
            Только для полей ссылочного типа
            </summary>
</member>
<member name="F:_1C.V8.Data.V8FilterCondition.NotInGroup">
<summary>
            Проверка на не вхождение значения в группу.
            Только для полей ссылочного типа
            </summary>
</member>
<member name="F:_1C.V8.Data.V8FilterCondition.InListByHierarchy">
<summary>
            Проверка на вхождение значения в одну из групп списка.
            Только для полей ссылочного типа
            </summary>
</member>
<member name="F:_1C.V8.Data.V8FilterCondition.NotInListByHierarchy">
<summary>
            Проверка на вхождение значения в одну из групп списка.
            Только для полей ссылочного типа
            </summary>
</member>
<member name="T:_1C.V8.Data.V8Metadata">
<summary>
            Хранилище метаданных
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Metadata.kDataNameSpace">
<summary>
            Имя пространства имен "_1C.V8.Data"
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Metadata.kMDTypesNamespace">
<summary>
            Имя пространства имен с типами 1С:Предприятия
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Metadata.kMDAssemblyFilePrefix">
<summary>
            Имя сборки с типами 1С:Предприятия
            </summary>
</member>
<member name="M:_1C.V8.Data.V8Metadata.SetDatabase(System.String,System.String)">
<summary>
            Установить соответствие между именем метаданных и базой данных
            </summary>
<param name="IBAlias">Имя ИБ</param>
<param name="database">база данных</param>
</member>
<member name="M:_1C.V8.Data.V8Metadata.GetDatabase(System.String)">
<summary>
            Получить по имени метаданных базу данных
            </summary>
<param name="IBAlias">Имя ИБ</param>
</member>
<member name="M:_1C.V8.Data.V8Metadata.GetMetadata(System.String)">
<summary>
            Возвращает объект описания метаданных, по их имени.
            Имя задается при регистрации и ассоциируется с определенной ИБ
            </summary>
<param name="IBAlias">Имя ИБ</param>
<returns>Объект описания метаданных</returns>
</member>
<member name="M:_1C.V8.Data.V8Metadata.GetMetadata(System.String,System.String)">
<summary>
            Возвращает объект описания метаданных, по их имени.
            Имя задается при регистрации и ассоциируется с определенной ИБ
            </summary>
<param name="IBAlias">Имя ИБ</param>
<param name="path">Путь</param>
<returns>Объект описания метаданных</returns>
</member>
<member name="M:_1C.V8.Data.V8Metadata.LoadMDInfo(System.String,System.String)">
<summary>
            Загрузить объект описания метаданных
            </summary>
<param name="IBAlias">Имя ИБ</param>
<param name="path">Путь</param>
</member>
<member name="M:_1C.V8.Data.V8Metadata.GetConfigLanguages(System.String,System.String,System.String)">
<summary>
            Возвращает список языков конфигурации
            </summary>
<param name="database">Строка идентифицирующая ИБ</param>
<param name="userName">Имя пользователя</param>
<param name="userPassword">Пароль пользователя</param>
<returns>Список языков конфигурации</returns>
</member>
<member name="M:_1C.V8.Data.V8Metadata.GetLangUsers(System.String[]@,System.String[]@,System.String[]@)">
<summary>
            Вызывает диалог задания списка пользователей и их паролей
            для каждого языка конфигурации
            </summary>
<param name="langCodes">Список языков конфигурации</param>
<param name="userNames">Список пользователей</param>
<param name="userPasswords">Список паролей пользователей</param>
<returns></returns>
</member>
<member name="M:_1C.V8.Data.V8Metadata.ShowWaitDialog">
<summary>
            Показывает диалог с сообщением.
            </summary>
<returns>Форма сообщения.</returns>
</member>
<member name="M:_1C.V8.Data.V8Metadata.GetUserLanguage(System.String,System.String,System.String)">
<summary>
            Возвращает код языка пользователя
            </summary>
<param name="database">Строка идентифицирующая ИБ</param>
<param name="userName">Имя пользователя</param>
<param name="userPassword">Пароль пользователя</param>
<returns>Код языка пользователя</returns>
</member>
<member name="M:_1C.V8.Data.V8Metadata.GenerateMDFile(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.String[])">
<summary>
            Создать файл с описанием метаданных
            </summary>
<param name="database">Строка идентифицирующая ИБ</param>
<param name="userName">Имя пользователя</param>
<param name="userPassword">Пароль пользователя</param>
<param name="folderName">Путь к каталогу, в котором будет создан файл</param>
<param name="IBAlias">Имя ИБ</param>
<param name="langCodes">Список языков</param>
<param name="userNames">Имена пользователей</param>
<param name="userPasswords">Пароли пользователей</param>
</member>
<member name="M:_1C.V8.Data.V8Metadata.#ctor">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8Metadata" />
            </summary>
</member>
<member name="M:_1C.V8.Data.V8Metadata.ParseValue(System.String,System.String)">
<summary>
            По строке и имени типа получить значение
            </summary>
<param name="str">Строковое представление значения</param>
<param name="typeName">Имя типа значения</param>
<returns>Значение</returns>
</member>
<member name="M:_1C.V8.Data.V8Metadata.ParseValue(System.String,_1C.V8.Data.V8TypeInfo)">
<summary>
            По строке и описанию типа получить значение
            </summary>
<param name="str">Строковое представление значения</param>
<param name="typeInfo">Описание типа</param>
<returns>Значение</returns>
</member>
<member name="M:_1C.V8.Data.V8Metadata.TermString(System.String[])">
<summary>
            Получить значение терма на языке конфигурации
            </summary>
<param name="terms">Массив термов</param>
<returns>Терм на языке конфигурации</returns>
</member>
<member name="M:_1C.V8.Data.V8Metadata.TableNameByTypeName(System.String)">
<summary>
            Получить имя таблицы по имени типа (только для ссылочных типов)
            </summary>
<param name="typeName">Имя типа</param>
<returns>Имя таблицы</returns>
</member>
<member name="M:_1C.V8.Data.V8Metadata.TypeNameByTableName(System.String)">
<summary>
            Получить имя типа по имени таблицы (только для ссылочных типов)
            </summary>
<param name="tableName">Имя таблицы</param>
<returns>Имя типа</returns>
</member>
<member name="M:_1C.V8.Data.V8Metadata.GenerateMDInfo(_1C.V8.Data.V8DbConnection,System.String[],_1C.V8.Data.ComObject[])">
<summary>
            Создать описание метаданных
            </summary>
<param name="dbConnection">Соединение с 1С:Предприятием</param>
<param name="langCodes">Список языков</param>
<param name="connections">Соединения с ИБ для каждого языка</param>
</member>
<member name="M:_1C.V8.Data.V8Metadata.SetDependencies(_1C.V8.Data.ComObject,_1C.V8.Data.V8Metadata,System.Collections.Hashtable,System.Collections.Hashtable,System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.ListDictionary,System.Collections.Specialized.NameValueCollection)">
<summary>
            Установить зависимости
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="metadata">Метаданные</param>
<param name="mdToType">Соответстсвие имени объекта метаданных типу ссылки</param>
<param name="mdToTable">Соответстсвие имени объекта метаданных типу тиблицы</param>
<param name="actionsToRecorder">Соответствие движений регистратора имени объекта метаданных</param>
<param name="subTables">Соответствие подчиненных таблиц имени объекта метаданных</param>
<param name="inputOnBasis">Соответствие объектов ввода на основании имени объекта метаданных</param>
</member>
<member name="M:_1C.V8.Data.V8Metadata.SetFieldPresentationLength">
<summary>
            Расчет длины представления полей всех таблиц
            </summary>
</member>
<member name="M:_1C.V8.Data.V8Metadata.AddTableTypeReference(System.String,System.String)">
<summary>
            Добавить связь таблицы и типа
            </summary>
<param name="tableName">Имя таблицы</param>
<param name="typeName">Имя типа</param>
</member>
<member name="M:_1C.V8.Data.V8Metadata.AddType(_1C.V8.Data.V8TypeInfo)">
<summary>
            Добавить описане типа
            </summary>
<param name="typeInfo">Описание типа</param>
</member>
<member name="P:_1C.V8.Data.V8Metadata.Name">
<summary>
            Имя ИБ
            </summary>
</member>
<member name="P:_1C.V8.Data.V8Metadata.Namespace">
<summary>
            Пространство имен, в котором определены типы данных, соответствующие метаданным
            </summary>
</member>
<member name="P:_1C.V8.Data.V8Metadata.TypesInfo">
<summary>
            Возвращает список типов
            </summary>
</member>
<member name="P:_1C.V8.Data.V8Metadata.TablesInfo">
<summary>
            Возвращает список таблиц
            </summary>
</member>
<member name="P:_1C.V8.Data.V8Metadata.CurrentLanguage">
<summary>
            Язык конфигурации
            </summary>
</member>
<member name="P:_1C.V8.Data.V8Metadata.CurrentUILanguage">
<summary>
            Имя языка конфигурации
            </summary>
</member>
<member name="P:_1C.V8.Data.V8Metadata.Languages">
<summary>
            Список языков, для которых сгенерированы метаданные
            </summary>
</member>
<member name="T:_1C.V8.Data.V8MetadataCollection">
<summary>
            Коллекция метаданных
            </summary>
</member>
<member name="M:_1C.V8.Data.V8MetadataCollection.Add(System.String,_1C.V8.Data.V8Metadata)">
<summary>
            Добавить пару ключ-значение в коллекцию
            </summary>
<param name="key">Ключ добавляемой пары ключ-значение</param>
<param name="value">Добавляемое значение</param>
</member>
<member name="M:_1C.V8.Data.V8MetadataCollection.Remove(System.String)">
<summary>
            Удаляет пару ключ-значение из коллекции
            </summary>
<param name="key">Ключ удаляемой пары ключ-значение</param>
</member>
<member name="M:_1C.V8.Data.V8MetadataCollection.Contains(System.String)">
<summary>
            Определяет, содержится ли в коллекции пара ключ-значение с заданным ключом
            </summary>
<param name="key">Ключ искомой пары ключ-значение</param>
<returns>true если пара ключ-значение содержится в коллекции</returns>
</member>
<member name="P:_1C.V8.Data.V8MetadataCollection.Item(System.String)">
<summary>
            Возвращает значение по его ключу
            </summary>
</member>
<member name="T:_1C.V8.Data.IBAliasAttribute">
<summary>
            Атрибут, используемый для задания имени ИБ, для генерируемых типов
            </summary>
</member>
<member name="M:_1C.V8.Data.IBAliasAttribute.#ctor(System.String)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.IBAliasAttribute" />
            </summary>
<param name="IBAlias">Имя ИБ</param>
</member>
<member name="P:_1C.V8.Data.IBAliasAttribute.IBAlias">
<summary>
            Имя ИБ
            </summary>
</member>
<member name="T:_1C.V8.Data.V8Rights">
<summary>
            Объект для проверки прав
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.Posting">
<summary>
            Проведение.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.UndoPosting">
<summary>
            Отмена проведения.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.TotalsControl">
<summary>
            Управление итогами.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.InteractivePosting">
<summary>
            Интерактивное проведение.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.InteractiveUndoPosting">
<summary>
            Интерактивная отмена проведения.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.Read">
<summary>
            Чтение.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.Insert">
<summary>
            Добавление.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.Update">
<summary>
            Изменение.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.Delete">
<summary>
            Удаление.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.Use">
<summary>
            Использование.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.View">
<summary>
            Просмотр.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.InteractiveInsert">
<summary>
            Интерактивное добавление.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.Edit">
<summary>
            Редактирование.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.InteractiveDelete">
<summary>
            Интерактивное удаление.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.InteractiveSetDeletionMark">
<summary>
            Интерактивная пометка на удаление.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.InteractiveClearDeletionMark">
<summary>
            Интерактивное снятие пометки удаления.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.InteractiveDeleteMarked">
<summary>
            Интерактивное удаление помеченных.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.Administration">
<summary>
            Административные функции.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.ExclusiveMode">
<summary>
            Монопольный режим.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.ActiveUsers">
<summary>
            Активные пользователи.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.ExternalConnection">
<summary>
            Внешнее соединение.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.EventLog">
<summary>
            Журнал регистрации.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.Automation">
<summary>
            Automation.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.InputByString">
<summary>
            Ввод по строке.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.Get">
<summary>
            Получение значения, не хранящегося в базе данных.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.Set">
<summary>
            Установка значения, не сохраняемого в базе данных.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.InteractiveActivate">
<summary>
            Право на интерактивную активацию.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.Start">
<summary>
            Право на старт бизнес-процесса.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.InteractiveStart">
<summary>
            Право на интерактивный старт бизнес-процесса.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.Execute">
<summary>
            Право на выполнение задачи.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8Rights.InteractiveExecute">
<summary>
            Право на интерактивное выполнение задачи
            </summary>
</member>
<member name="M:_1C.V8.Data.V8Rights.AccessRight(System.String,_1C.V8.Data.V8TableInfo,_1C.V8.Data.ComObject)">
<summary>
            Проверка на наличие прав на данный объект у пользователя
            </summary>
<param name="right">Вид прав</param>
<param name="tableInfo">Таблица</param>
<param name="connection">Соединение с ИБ</param>
<returns>Доступ разрешен</returns>
</member>
<member name="P:_1C.V8.Data.V8Rights.InteractivePostingNonOperational">
<summary>
            Интерактивное проведение неоперативное.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8Rights.InteractiveOpenExtProcessing">
<summary>
            Интерактивное открытие внешних обработок.
            </summary>
</member>
<member name="T:_1C.V8.Data.V8RightException">
<summary>
            Исключительная ситуация при нарушении прав доступа
            </summary>
</member>
<member name="M:_1C.V8.Data.V8RightException.#ctor(System.String)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8RightException" />
            </summary>
<param name="message">Текст сообщения</param>
</member>
<member name="T:_1C.V8.Data.V8SystemEnum">
<summary>
            Системное перечисление
            </summary>
</member>
<member name="M:_1C.V8.Data.V8SystemEnum.#ctor(System.String,System.String)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8SystemEnum" />
            </summary>
<param name="type">Имя типа перечисления</param>
<param name="value">Значение перечисления</param>
</member>
<member name="M:_1C.V8.Data.V8SystemEnum.Reference(_1C.V8.Data.V8DbConnection)">
<summary>
            Возвращает COM-объект 1С-Предприятия для значения перечисления
            </summary>
<param name="connection">Соединение с информационной базой</param>
<returns>Возвращает COM-объект 1С-Предприятия</returns>
</member>
<member name="P:_1C.V8.Data.V8SystemEnum.TypeName">
<summary>
            Имя типа перечисления
            </summary>
</member>
<member name="P:_1C.V8.Data.V8SystemEnum.Value">
<summary>
            Значение перечисления
            </summary>
</member>
<member name="T:_1C.V8.Data.V8TableCategory">
<summary>
            Виды категорий таблиц
            </summary>
</member>
<member name="F:_1C.V8.Data.V8TableCategory.Object">
<summary>
            Объектная таблица
            </summary>
</member>
<member name="F:_1C.V8.Data.V8TableCategory.Register">
<summary>
            Регистр
            </summary>
</member>
<member name="F:_1C.V8.Data.V8TableCategory.TabularPart">
<summary>
            Подчиненная (табличные части)
            </summary>
</member>
<member name="F:_1C.V8.Data.V8TableCategory.SingleRowTable">
<summary>
            Таблица, состоящая из одной строки (константы)
            </summary>
</member>
<member name="F:_1C.V8.Data.V8TableCategory.Journal">
<summary>
            Журнал документов
            </summary>
</member>
<member name="F:_1C.V8.Data.V8TableCategory.FilterCriteria">
<summary>
            Критерий отбора
            </summary>
</member>
<member name="F:_1C.V8.Data.V8TableCategory.Enum">
<summary>
            Перечисление
            </summary>
</member>
<member name="T:_1C.V8.Data.FoldersAndItemsUse">
<summary>
            Использование групп и элементов
            </summary>
</member>
<member name="F:_1C.V8.Data.FoldersAndItemsUse.Items">
<summary>
            Элементы
            </summary>
</member>
<member name="F:_1C.V8.Data.FoldersAndItemsUse.Folders">
<summary>
            Группы
            </summary>
</member>
<member name="F:_1C.V8.Data.FoldersAndItemsUse.FoldersAndItems">
<summary>
            Группы и элементы
            </summary>
</member>
<member name="T:_1C.V8.Data.V8TableInfo">
<summary>
            Класс - описание таблицы
            </summary>
</member>
<member name="M:_1C.V8.Data.V8TableInfo.#ctor">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8TableInfo" />.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8TableInfo.GetPresentation(System.String)">
<summary>
            Возвращает представление поля для заданного языка
            </summary>
<param name="lang">Код языка, для которого необходимо получить представление</param>
<returns>Представление поля</returns>
</member>
<member name="P:_1C.V8.Data.V8TableInfo.Name">
<summary>
            Имя таблицы
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TableInfo.Presentation">
<summary>
            Возвращает представление таблицы для текущей Culture
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TableInfo.Category">
<summary>
            Категория таблицы
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TableInfo.FieldsInfo">
<summary>
            Список полей
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TableInfo.KeyFields">
<summary>
            Ключевые поля (имена полей)
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TableInfo.OrderFields">
<summary>
            Поля упорядочивания по умолчанию (имена полей)
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TableInfo.TabularParts">
<summary>
            Табличные части (имена)
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TableInfo.Hierarchical">
<summary>
            Признак иерархической таблицы
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TableInfo.IsSubTable">
<summary>
            Признак, что таблица является подчиненной
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TableInfo.ParentField">
<summary>
            Поле, по которому строится иерархия (имя поля)
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TableInfo.IsFolderField">
<summary>
            Поле определяющее, является ли запись группой или элементом (имя поля)
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TableInfo.WriteMethod">
<summary>
            Имя метода для записи
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TableInfo.WriteMethodParameters">
<summary>
            Параметры метода записи (имена полей)
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TableInfo.SubTables">
<summary>
            Подчиненные таблицы (имена таблиц)
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TableInfo.SubTablesFields">
<summary>
            Поля, по которым происходит подчинение (имена полей)
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TableInfo.ByRegistrator">
<summary>
            Признак зависимого регистра
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TableInfo.ShortName">
<summary>
            Имя таблицы без квалификатора
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TableInfo.ListFields">
<summary>
            Поля для представления таблицы в виде списка
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TableInfo.ItemFields">
<summary>
            Поля для представления элемента таблицы
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TableInfo.Parameters">
<summary>
            Список параметров виртуальной таблицы
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TableInfo.ConditionParameterName">
<summary>
            Имена параметров "Условие"
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TableInfo.MainTableName">
<summary>
            Имя главной таблицы для виртуальных таблиц
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TableInfo.Helper">
<summary>
            Интерфейс IV8ObjectHelper
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TableInfo.Usage">
<summary>
            Использование для элемента или группы.
            Только для табличных частей
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TableInfo.TypeDescriptionFieldsCount">
<summary>
            Количество описаний типов, которое можно получить по значению
            данной таблицы. Для планов видов характеристик 1, 
            для планов счетов максимальное количество субконто
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TableInfo.TypeDescriptionInSeparateTable">
<summary>
            Описания типов лежат в отдельной таблице и соответственно
            их надо извлекать отдельным запросом через Helper объекта
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TableInfo.InputOnBasisTables">
<summary>
            Список таблиц, записи которых вводятся на основании
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TableInfo.MDObjPath">
<summary>
            Путь к объекту метаданных, с которым связана таблица.
            Не равно полному имени объекта метаданных!!!
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TableInfo.ValueByStringFields">
<summary>
            Поля для поиска значения по строке
            </summary>
</member>
<member name="T:_1C.V8.Data.V8TablesInfoCollection">
<summary>
            Коллекция описания таблиц - Hash таблица
            </summary>
</member>
<member name="M:_1C.V8.Data.V8TablesInfoCollection.#ctor">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8TablesInfoCollection" />.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8TablesInfoCollection.Add(_1C.V8.Data.V8TableInfo)">
<summary>
            Добавить значение в коллекцию
            </summary>
<param name="value">Добавляемое значение</param>
</member>
<member name="M:_1C.V8.Data.V8TablesInfoCollection.Remove(_1C.V8.Data.V8TableInfo)">
<summary>
            Удаляет значение из коллекции
            </summary>
<param name="value">Удаляемое значение</param>
</member>
<member name="M:_1C.V8.Data.V8TablesInfoCollection.Remove(System.String)">
<summary>
            Удаляет таблицу из коллекции
            </summary>
<param name="name">Имя удаляемой таблицы</param>
</member>
<member name="M:_1C.V8.Data.V8TablesInfoCollection.Contains(_1C.V8.Data.V8TableInfo)">
<summary>
            Определяет, содержится ли указанное значение в коллекции
            </summary>
<param name="value">Искомое значение</param>
<returns>true если значение содержится в коллекции</returns>
</member>
<member name="M:_1C.V8.Data.V8TablesInfoCollection.Contains(System.String)">
<summary>
            Определяет, содержится ли в коллекции таблица с указанным именем
            </summary>
<param name="name">имя искомой таблицы</param>
<returns>true если таблица содержится содержится в коллекции</returns>
</member>
<member name="M:_1C.V8.Data.V8TablesInfoCollection.GetEnumerator">
<summary>
            Возвращает IEnumerator для использования в циклах foreach
            </summary>
<returns>Интерфейс IEnumerator</returns>
</member>
<member name="P:_1C.V8.Data.V8TablesInfoCollection.Item(System.String)">
<summary>
            Возвращает значение по имени таблицы
            </summary>
</member>
<member name="T:_1C.V8.Data.V8ConditionalParameter">
<summary>
            Параметр "Условие" виртуальных таблиц
            </summary>
</member>
<member name="P:_1C.V8.Data.V8ConditionalParameter.Name">
<summary>
            Имя параметра
            </summary>
</member>
<member name="P:_1C.V8.Data.V8ConditionalParameter.Fields">
<summary>
            Список полей
            </summary>
</member>
<member name="T:_1C.V8.Data.ConditionParameterCollection">
<summary>
            Коллекция - список параметров-условий виртуальной таблицы
            </summary>
</member>
<member name="M:_1C.V8.Data.ConditionParameterCollection.#ctor">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.ConditionParameterCollection" />.
            </summary>
</member>
<member name="M:_1C.V8.Data.ConditionParameterCollection.Add(_1C.V8.Data.V8ConditionalParameter)">
<summary>
            Добавить значение в коллекцию
            </summary>
<param name="value">Добавляемое значение</param>
</member>
<member name="M:_1C.V8.Data.ConditionParameterCollection.Add(System.String)">
<summary>
            Добавить значение в коллекцию
            </summary>
<param name="name">Имя добавляемого параметра</param>
</member>
<member name="M:_1C.V8.Data.ConditionParameterCollection.Remove(_1C.V8.Data.V8ConditionalParameter)">
<summary>
            Удаляет значение из коллекции
            </summary>
<param name="value">Удаляемое значение</param>
</member>
<member name="M:_1C.V8.Data.ConditionParameterCollection.Contains(_1C.V8.Data.V8ConditionalParameter)">
<summary>
            Определяет, содержится ли указанное значение в коллекции
            </summary>
<param name="value">Искомое значение</param>
<returns>true если значение содержится в коллекции</returns>
</member>
<member name="M:_1C.V8.Data.ConditionParameterCollection.Contains(System.String)">
<summary>
            Определяет, содержится ли указанное значение в коллекции
            </summary>
<param name="name">Имя искомого параметра</param>
<returns>true если значение содержится в коллекции</returns>
</member>
<member name="M:_1C.V8.Data.ConditionParameterCollection.IndexOf(System.String)">
<summary>
            Определяет, содержится ли указанное значение в коллекции
            </summary>
<param name="name">Имя параметра</param>
<returns>true если значение содержится в коллекции</returns>
</member>
<member name="P:_1C.V8.Data.ConditionParameterCollection.Item(System.String)">
<summary>
            Возвращает значение по имени условия
            </summary>
</member>
<member name="T:_1C.V8.Data.V8Transaction">
<summary>
            Объект - транзакция
            </summary>
</member>
<member name="M:_1C.V8.Data.V8Transaction.#ctor(_1C.V8.Data.V8DbConnection)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8Transaction" />.
            </summary>
<param name="connection">Соединение с ИБ</param>
</member>
<member name="M:_1C.V8.Data.V8Transaction.#ctor(_1C.V8.Data.V8DbConnection,System.Data.IsolationLevel)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8Transaction" />.
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="isolationLevel">Уровень изоляции транзакции</param>
</member>
<member name="M:_1C.V8.Data.V8Transaction.Commit">
<summary>
            Подтвердить транзакцию
            </summary>
</member>
<member name="M:_1C.V8.Data.V8Transaction.Rollback">
<summary>
            Откатить транзакцию
            </summary>
</member>
<member name="M:_1C.V8.Data.V8Transaction.Dispose">
<summary>
            Освободить ресурсы
            </summary>
</member>
<member name="P:_1C.V8.Data.V8Transaction.Connection">
<summary>
            Соединение с ИБ
            </summary>
</member>
<member name="P:_1C.V8.Data.V8Transaction.IsolationLevel">
<summary>
            Уровень изоляции транзакции 
            </summary>
</member>
<member name="T:_1C.V8.Data.V8TypeCategory">
<summary>
            Виды категорий типов.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8TypeCategory.Null">
<summary>
            Тип Null.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8TypeCategory.Primitive">
<summary>
            Примитивный тип.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8TypeCategory.DBReference">
<summary>
            Тип - ссылка на значение.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8TypeCategory.Enumeration">
<summary>
            Перечисление.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8TypeCategory.SystemEnumeration">
<summary>
            Системное перечисление.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8TypeCategory.TypeDescription">
<summary>
            Описание типа.
            </summary>
</member>
<member name="F:_1C.V8.Data.V8TypeCategory.ValueStorage">
<summary>
            Хранилище значения.
            </summary>
</member>
<member name="T:_1C.V8.Data.V8TypeInfo">
<summary>
            Класс - описание типа объекта.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8TypeInfo.#ctor">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8TypeInfo" />.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8TypeInfo.#ctor(System.String,System.String)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8TypeInfo" />.
            </summary>
<param name="name">Имя типа</param>
<param name="dataTypeName">Имя NET-типа</param>
</member>
<member name="M:_1C.V8.Data.V8TypeInfo.#ctor(System.String,_1C.V8.Data.V8TypeCategory,System.Int32)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8TypeInfo" />.
            </summary>
<param name="name">Имя типа</param>
<param name="category">Категория типа</param>
<param name="nPresentationLength">Длина представления</param>
</member>
<member name="M:_1C.V8.Data.V8TypeInfo.#ctor(System.String,_1C.V8.Data.V8TypeCategory,System.String)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8TypeInfo" />.
            </summary>
<param name="name">Имя типа</param>
<param name="category">Категория типа</param>
<param name="dataTypeName">Имя NET-типа</param>
</member>
<member name="M:_1C.V8.Data.V8TypeInfo.#ctor(System.String,_1C.V8.Data.V8TypeCategory)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8TypeInfo" />.
            </summary>
<param name="name">Имя типа</param>
<param name="category">Категория типа</param>
</member>
<member name="M:_1C.V8.Data.V8TypeInfo.#ctor(System.String,_1C.V8.Data.V8TypeCategory,System.String,System.Boolean)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8TypeInfo" />.
            </summary>
<param name="name">Имя типа</param>
<param name="category">Категория типа</param>
<param name="dataTypeName">Имя NET-типа</param>
<param name="canUseInCompositeType">Может использоваться в составном типе данных</param>
</member>
<member name="M:_1C.V8.Data.V8TypeInfo.#ctor(System.String,_1C.V8.Data.V8TypeCategory,System.String,System.Int32)">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8TypeInfo" />.
            </summary>
<param name="name">Имя типа</param>
<param name="category">Категория типа</param>
<param name="dataTypeName">Имя NET-типа</param>
<param name="presentationLength">Длина представления</param>
</member>
<member name="M:_1C.V8.Data.V8TypeInfo.InitType(_1C.V8.Data.ComObject,_1C.V8.Data.V8Metadata,_1C.V8.Data.ComObject[])">
<summary>
            Инициализация информации о типе по данным из 1С:Предприятия.
            </summary>
<param name="connection">Соединение с ИБ</param>
<param name="metadata">Метаданные</param>
<param name="connections">Соединения с ИБ для каждого языка</param>
</member>
<member name="M:_1C.V8.Data.V8TypeInfo.GetPresentation(System.String)">
<summary>
            Возвращает представление типа для заданного языка.
            </summary>
<param name="lang">Код языка, для которого необходимо получить представление типа</param>
<returns>Представление типа</returns>
</member>
<member name="M:_1C.V8.Data.V8TypeInfo.GetEnumPresentation(System.String)">
<summary>
            Возвращает представления значений перечислимого типа.
            </summary>
<param name="lang">Код языка, для которого необходимо получить представления</param>
<returns>Представления значений перечислимого типа</returns>
</member>
<member name="P:_1C.V8.Data.V8TypeInfo.Name">
<summary>
            Имя типа (не соответствует XML имени типа).
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TypeInfo.DataType">
<summary>
            Соответствующий NET-тип.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TypeInfo.DataTypeName">
<summary>
            Имя соответствующего NET-типа.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TypeInfo.XmlName">
<summary>
            Имя XML типа.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TypeInfo.Category">
<summary>
            Категория типа.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TypeInfo.DefaultValue">
<summary>
            Значение по умолчанию.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TypeInfo.Presentation">
<summary>
            Представление типа.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TypeInfo.PresentationLength">
<summary>
            Длина представления типа.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TypeInfo.EnumValues">
<summary>
            Значения перечислимого типа.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TypeInfo.EnumPresentations">
<summary>
            Представления значений перечислимого типа.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TypeInfo.CanUseInCompositeType">
<summary>
            Определить возможность использования в составном типе данных.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TypeInfo.IsReference">
<summary>
            Является ли тип ссылочным.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TypeInfo.IsEnum">
<summary>
            Является ли тип перечислимым.
            </summary>
</member>
<member name="P:_1C.V8.Data.V8TypeInfo.NamespaceURI">
<summary>
            Namespace для типа.
            </summary>
</member>
<member name="T:_1C.V8.Data.V8TypesInfoCollection">
<summary>
            Коллекция описания типов - Hash таблица.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8TypesInfoCollection.#ctor">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.V8TypesInfoCollection" />.
            </summary>
</member>
<member name="M:_1C.V8.Data.V8TypesInfoCollection.GetByXmlName(System.String)">
<summary>
            Описание типа по xml-имени типа.
            </summary>
<param name="xmlTypeName">xml имя типа</param>
<returns>Описание типа</returns>
</member>
<member name="M:_1C.V8.Data.V8TypesInfoCollection.Add(_1C.V8.Data.V8TypeInfo)">
<summary>
            Добавить значение в коллекцию.
            </summary>
<param name="value">Добавляемое значение</param>
<returns>Позиция, в которую вставлено значение</returns>
</member>
<member name="M:_1C.V8.Data.V8TypesInfoCollection.Remove(_1C.V8.Data.V8TypeInfo)">
<summary>
            Удаляет значение из коллекции.
            </summary>
<param name="value">Удаляемое значение</param>
</member>
<member name="M:_1C.V8.Data.V8TypesInfoCollection.Contains(_1C.V8.Data.V8TypeInfo)">
<summary>
            Определяет, содержится ли указанное значение в коллекции.
            </summary>
<param name="value">Искомое значение</param>
<returns>true если значение содержится в коллекции</returns>
</member>
<member name="M:_1C.V8.Data.V8TypesInfoCollection.GetEnumerator">
<summary>
            Возвращает IEnumerator для использования в циклах foreach.
            </summary>
<returns>Интерфейс IEnumerator</returns>
</member>
<member name="P:_1C.V8.Data.V8TypesInfoCollection.Item(System.String)">
<summary>
            Возвращает значение по имени типа.
            </summary>
</member>
<member name="T:_1C.V8.Data.V8Util">
<summary>
            Служебный класс
            </summary>
</member>
<member name="M:_1C.V8.Data.V8Util.ParseOrderString(System.String,_1C.V8.Data.V8Util.V8OrderItemInfoCollection)">
<summary>
            Разбирает строку упорядочивания на элементы
            </summary>
<param name="str">Строка упорядочивания</param>
<param name="orderFieldsInfo">Коллекция элементов строки упорядочивания</param>
</member>
<member name="M:_1C.V8.Data.V8Util.ParseListString(System.String,System.Collections.Specialized.StringCollection)">
<summary>
            Разбирает строку упорядочивания на элементы
            </summary>
<param name="str">Строка упорядочивания</param>
<param name="list">Список наименований полей из строки упорядочивания</param>
</member>
<member name="M:_1C.V8.Data.V8Util.ParseFieldString(System.String,System.Collections.Specialized.StringCollection,System.Collections.Specialized.StringCollection)">
<summary>
            Разбирает строку со списком полей  на элементы
            </summary>
<param name="str">Строка со списком полей</param>
<param name="fieldsList">Коллекция элементов</param>
<param name="aliasList">Список алиасов полей из строки упорядочивания</param>
</member>
<member name="T:_1C.V8.Data.V8Util.V8OrderItemInfo">
<summary>
            Структура описывает свойства поля из строки упорядочивания
            </summary>
</member>
<member name="M:_1C.V8.Data.V8Util.V8OrderItemInfo.#ctor">
<summary>
            Создает экземпляр класса V8OrderItemInfo
            </summary>
</member>
<member name="P:_1C.V8.Data.V8Util.V8OrderItemInfo.FieldName">
<summary>
            Имя поля
            </summary>
</member>
<member name="P:_1C.V8.Data.V8Util.V8OrderItemInfo.Ascending">
<summary>
            Признак упорядочивания по возрастанию
            </summary>
</member>
<member name="P:_1C.V8.Data.V8Util.V8OrderItemInfo.AscModeString">
<summary>
            Строка, в которой записан исходный признак упорядочивания
            </summary>
</member>
<member name="T:_1C.V8.Data.V8Util.V8OrderItemInfoCollection">
<summary>
            Коллекция элементов строки упорядочивания
            </summary>
</member>
<member name="M:_1C.V8.Data.V8Util.V8OrderItemInfoCollection.Add(_1C.V8.Data.V8Util.V8OrderItemInfo)">
<summary>
            Добавляет заданный объект <see cref="T:_1C.V8.Data.V8Util.V8OrderItemInfo" /> в коллекцию.
            </summary>
<param name="value"><see cref="T:_1C.V8.Data.V8Util.V8OrderItemInfo" />, который требуется добавить в коллекцию.</param>
<returns>Индекс, указывающий, куда был вставлен новый элемент.</returns>
</member>
<member name="M:_1C.V8.Data.V8Util.V8OrderItemInfoCollection.IndexOf(_1C.V8.Data.V8Util.V8OrderItemInfo)">
<summary>
            Возвращает индекс позиции, в которой находится искомое значение
            </summary>
<param name="value">Искомое значение</param>
<returns>Индекс позиции, в которой находится значение. 
            -1 - если такого значения нет в коллекции</returns>
</member>
<member name="M:_1C.V8.Data.V8Util.V8OrderItemInfoCollection.Insert(System.Int32,_1C.V8.Data.V8Util.V8OrderItemInfo)">
<summary>
            Вставляет значение в коллекцию в заданную позицию
            </summary>
<param name="index">Индекс позиции, в которую вставляется значение</param>
<param name="value">Значение</param>
</member>
<member name="M:_1C.V8.Data.V8Util.V8OrderItemInfoCollection.Remove(_1C.V8.Data.V8Util.V8OrderItemInfo)">
<summary>
            Удаляет значение из коллекции
            </summary>
<param name="value">Удаляемое значение</param>
</member>
<member name="M:_1C.V8.Data.V8Util.V8OrderItemInfoCollection.Contains(_1C.V8.Data.V8Util.V8OrderItemInfo)">
<summary>
            Определяет, содержится ли указанное значение в коллекции
            </summary>
<param name="value">Искомое значение</param>
<returns>true если значение содержится в коллекции</returns>
</member>
<member name="P:_1C.V8.Data.V8Util.V8OrderItemInfoCollection.Item(System.Int32)">
<summary>
            Возвращает значение по его индексу в коллекции
            </summary>
</member>
<member name="P:_1C.V8.Data.V8Util.V8OrderItemInfoCollection.Item(System.String)">
<summary>
            Возвращает значение по имени поля
            </summary>
</member>
<member name="T:_1C.V8.Data.ValueStorage">
<summary>
            Экземпляр данного класса представляет собой представление объекта ХранилищеЗначения.
            </summary>
</member>
<member name="M:_1C.V8.Data.ValueStorage.#ctor">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.ValueStorage" />.
            </summary>
</member>
<member name="M:_1C.V8.Data.ValueStorage.#ctor(System.Byte[])">
<summary>
            Инициализирует новый экземпляр класса <see cref="T:_1C.V8.Data.ValueStorage" />.
            </summary>
<param name="_value">двоичные данные хранилища значений</param>
</member>
<member name="M:_1C.V8.Data.ValueStorage.Equals(System.Object)">
<summary>
            Сравнивает объекты типа ValueStorage.
            Для того чтобы быть равными объекты должны быть оба типа ValueStorage
            и содержать одинаковые данные
            </summary>
<param name="obj">ссылка на объект, с которым производится сравнение</param>
</member>
<member name="M:_1C.V8.Data.ValueStorage.GetHashCode">
<summary>
            Хэш-код данного объекта
            </summary>
<returns>хэш-код</returns>
</member>
<member name="M:_1C.V8.Data.ValueStorage.Clone">
<summary>
            Создает идентичную копию данного элемента.
            </summary>
<returns>Объект <see cref="T:_1C.V8.Data.ValueStorage" />, создаваемый данным методом.</returns>
</member>
<member name="P:_1C.V8.Data.ValueStorage.Value">
<summary>
            Сохраненное значение.
            </summary>
</member>
<member name="T:_1C.V8.Data.WaitForm">
<summary>
            Summary description for WaitForm.
            </summary>
</member>
<member name="F:_1C.V8.Data.WaitForm.components">
<summary>
            Required designer variable.
            </summary>
</member>
<member name="M:_1C.V8.Data.WaitForm.Dispose(System.Boolean)">
<summary>
            Clean up any resources being used.
            </summary>
</member>
<member name="M:_1C.V8.Data.WaitForm.InitializeComponent">
<summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
</member>
</members>
</doc>
